<?xml version="1.0" encoding="utf-8"?>

<!-- 'Variables', belongs to course 'The basics' -->

<resources>
    <chapterdata>
        <id>54</id>
        <name>Variables: declaring and assigning</name>
    </chapterdata>
    <text>
        <![CDATA[
        <b>Variables</b> are entities that store information. We can reference them in the program and
        can also update their value, hence the name variable.
        ]]>
    </text>
    <boxed title="Creating a variable">
        <![CDATA[
        Before we can use a variable, we must first tell the application about it. This is called
        <b>declaration</b>. It includes naming the variable.
        <br><br>
        After declaring our variable, the program will know it exists, and we can <b>reference</b> it,
        but we must also assign an initial value for our variable as well. This is called <b>initialization</b>.
        ]]>
    </boxed>
    <text>
        <![CDATA[
        Java is a <b>statically-typed</b> language. This means that when declaring our variable we not only
        have to name it, but also explicitly say it's <b>type</b>. For example, when we want to declare an integer
        variable, here is the code we must write:
        ]]>
    </text>
    <code>
        <![CDATA[
<font color="#DF7401">int</font> myVariable;
<br/>myVariable = 5;
        ]]>
    </code>
    <text>
        <![CDATA[
        In the first line we declare our variable, giving its type with the <b>int</b> keyword, and naming it
        <i>myVariable</i>. In the second line we initialize it with the value <i>5</i>. Notice that both lines are
        statements, and so they must end with a ';' symbol!
        ]]>
    </text>
    <text>
        <![CDATA[
        Forcing the programmer to write two statements for such a trivial task as declaring a variable is not necessary,
        and so Java allows us to declare and initialize a variable (even multiple variables, actually) in a single statement.
        Here is our previous code, simplified:
        ]]>
    </text>
    <code>
        <![CDATA[
        <font color="#DF7401">int </font>myVariable = 5;
        ]]>
    </code>
    <text>
        <![CDATA[
        We can see that in both cases, we use the '<b>=</b>' symbol to assign a value to a variable. When beginners
        read code, they often think that a line like <b>a = 3;</b> means that '<i>a is equal to 3</i>'. This is a
        mistake. The line means '<i>Let the value of a be 3</i>'. Assignment, not equality!
        <br><br>
        Later, when checking equality between variables, a similar operator, '<b>==</b>' is used.
        ]]>
    </text>
    <advanced title="Automatic initialization">
        <![CDATA[
        In some cases, Java will automatically initialize our variables for us to their <b>default value</b>,
        if we don't do it ourselves. The default values for variable types will be covered in a later course.
        ]]>
    </advanced>
    <text>
        <![CDATA[
        We are not restricted to declare just one variable with on statement. If we need variables with the same
        type, we can declare them like this:
        ]]>
    </text>
    <code>
        <![CDATA[
        <font color="#DF7401">int </font>x = 5, y = 9, z = -3;
        ]]>
    </code>
    <text>
        <![CDATA[
        As you can see, the we only need to write the type once, and then we can list the variables by name,
        and separated by commas.
        ]]>
    </text>
    <interactive instruction="Declare an integer variable called 'counter', with initial value 0!">
        <data>
<![CDATA[
 <font color="#DF7401">int</font> ___ = ___;
]]>
        </data>
        <answer place="0">counter</answer>
        <answer place="1">0</answer>
    </interactive>
    <title text="Referencing and assigning"/>
    <text>
        <![CDATA[
        After declaring our variable, we can reference it (surely this won't come as a surprise) with it's name. Just
        like initializing, we can assign a new value to our variable with the '<b>=</b>' operator. For the next example, let's
        take a look at a variable which stores text. The type of such a variable in Java is <b>String</b> (mind the capital S).
        <br><br>
        Use the project from the previous chapter, or create a new one. Modify the content of our main method to
        look like this:
        ]]>
    </text>
    <code>
        <![CDATA[
<font color="#E65100">public static</font> <font color="#DF7401"> void </font>main(<font color="#999900">String</font>[] args) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">String</font> text = "This is my initial value";
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.out.println(text);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text = "This is my updated value";
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.out.println(text);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
        ]]>
    </code>
    <text>
        <![CDATA[
        Run the project, and observe the output on the console. We have printed the value of the <b>same variable</b>
        twice, but the output is different each time!
        <br><br>
        This is because after printing for the first time, we assign a new value to said variable, before printing
        it the second time.
        ]]>
    </text>
    <!-- For some reason this crashes
    <interactive instruction="Complete the declaration and the print statement!">
        <data>
        <![CDATA[
            ___ data = "1a3gjg18b42";
            <br/><font color="#999900">System</font>.out.println(___);
        ]]>
        </data>
        <answer place="0">String</answer>
        <asnwer place="1">data</asnwer>
    </interactive>
    -->
    <boxed title="Be careful when assigning">
        <![CDATA[
        Some of you may have already experimented with trying to assign a value to a variable, which it clearly
        shouldn't have. For example, what would happen when we declare a variable with the type <b>int</b>, and
        initialize it with a <b>text value</b>?
        <br><br>
        Nothing good. The code won't compile, but even before that our IDE will warn us about the situation.
        ]]>
    </boxed>
    <image name="type_mismatch"/>
    <text>
        <![CDATA[
        An example of Eclipse warning us about a <b>type-mismatch</b>, and even offering a solution</b>.
        ]]>
    </text>
    <text>
        <![CDATA[
        As one would expect, we can also perform some simple arithmetic with our variables. Here are a few examples:
        ]]>
    </text>
    <code>
        <![CDATA[
        <font color="#DF7401">int </font>i = 3;
<font color="#DF7401">
<br/>int </font>j = 5;
<font color="#DF7401">
<br/>int </font>k = i + j;
<br/>j = i - 1;
<br/>k = 2 * k;
        ]]>
    </code>
    <text>
        <![CDATA[
        Can you guess what the values of <i>i, j and k</i> will be after executing this code?
        <br><br>
        <u>Solution:</u> Copy the statements and after them the following print statement, to your main
        method, and run the application!
        ]]>
    </text>
    <code>
        <![CDATA[
<font color="#999900">System</font>.out.println("i: "+i+", j: "+j+", k: "+k);
        ]]>
    </code>
    <text>
        <![CDATA[
        You can see that the '+' symbol can also be used on text variables, to connect them together. More on this
        in a later course.
        ]]>
    </text>
   <advanced title="Division">
       <![CDATA[
        The '<b>/</b>' operator is used to divide integer (and other numeric) variables. We must however be
        careful not to divide by 0, as this will result in an error when running our application!
       ]]>
   </advanced>
    <interactive instruction="Complete the sample so that the variables final value is 8!">
        <data>
                 <![CDATA[
               <font color="#DF7401">int</font> num = ___;
               <br/>num = num ___ 5;
          ]]>
        </data>
        <answer place="0" group="add" required_places="1">3</answer>
        <answer place="0" group="subtract" required_places="1">13</answer>
        <answer place="0" group="div" required_places="1">40</answer>
        <answer place="1" group="add" required_places="0">+</answer>
        <answer place="1" group="subtract" required_places="0">-</answer>
        <answer place="1" group="div" required_places="0">/</answer>
    </interactive>
</resources>