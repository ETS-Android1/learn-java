<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!-- Exam of course 'Primitives, control flow and I/O' --><resources>
    <examdata>
        <id>10</id>
        <questionAmount>25</questionAmount>
        <timeLimit>30</timeLimit>
        <finished>true</finished>
    </examdata>

    <!-- Questions for primitives -->
    <question type="multi_choice">
        <text>Milyen primitív típusokat használhatunk valós, nem egész számok tárolására?</text>
        <answer>long</answer>
        <answer>float</answer>
        <answer>byte</answer>
        <answer>double</answer>
        <correct>1</correct>
        <correct>3</correct>
    </question>
    <question type="multi_choice">
        <text>Milyen primitív típusokat használhatunk egész számok tárolására?</text>
        <answer>char</answer>
        <answer>boolean</answer>
        <answer>double</answer>
        <answer>int</answer>
        <correct>2</correct>
        <correct>3</correct>
    </question>
    <question type="single_choice">
        <text>Melyik primitív nem numerikus?</text>
        <answer>boolean</answer>
        <answer>float</answer>
        <answer>int</answer>
        <answer>short</answer>
        <correct>0</correct>
    </question>
    <question type="text">
        <text>Mi a neve azoknak az osztályoknak, amelyek a primitívek további funkcionalitását biztosítják?</text>
        <correct>wrapper</correct>
        <correct>wrapper class</correct>
        <ignoreCase/>
    </question>
    <question type="text">
        <text>Mi a 'float' primitív típus wrapper osztálya?</text>
        <correct>Float</correct>
    </question>
    <question type="text">
        <text>Mi a 'char' primitív típus wrapper osztálya?</text>
        <correct>Character</correct>
    </question>
    <question type="true_false">
        <text>Az int nagyobb számokat tud tárolni, mint a long.</text>
        <correct>false</correct>
    </question>
    <question type="true_false">
        <text>A long nagyobb számokat tud tárolni, mint a byte.</text>
        <correct>true</correct>
    </question>
    <question type="single_choice">
        <text>Mi történik, ha egy már maximális értéken lévő numerikus primitív értékét növeljük?</text>
        <válasz>Nem fog növekedni.</answer>
        <válasz>Túlcsordul, és negatívvá válik.</válasz>
        <válasz>Egy hiba fog jelentkezni, és a program leáll.</válasz>
        <válasz>Automatikusan átalakul egy nagyobb tartományú primitívvé.</válasz>
        <correct>1</correct>
    </question>
    <question type="text">
        <text>Mi a boolean alapértelmezett értéke?</text>
        <correct>false</correct>
    </question>
    <question type="text">
        <text>Mi a double alapértelmezett értéke?</text>
        <correct>0.0</correct>
    </question>
    <question type="true_false">
        <text>A double deklarálásakor pontot kell használnunk.</text>
        <correct>false</correct>
    </question>
    <question type="text">
        <text>Deklarálj egy short-ot 's' névvel és -124 értékkel.</text>
        <correct>short[s]s = -124;</correct>
        <correct>Short[s]s = -124;</correct>
        <ignoreSpace/>
    </question>
    <question type="text">
        <text>Deklarálj	egy double-t 'div' névvel és 22.435 értékkel.</text>
        <correct>double[s]div = 22.435;</correct>
        <correct>Double[s]div = 22.435;</correct>
        <ignoreSpace/>
    </question>
    <question type="text">
        <text>Deklarálj egy float-ot 'conv' névvel és fél értékkel.</text>
        <correct>float[s]conv = 0.5f;</correct>
        <correct>Float[s]conv = 0.5f;</correct>
        <ignoreSpace/>
    </question>
    <question type="text">
        <text>Deklarálj egy char-t a 'firstLetter' névvel és c értékkel.</text>
        <correct>char[s]firstLetter = 'c';</correct>
        <correct>Character[s]firstLetter = 'c';</correct>
        <ignoreSpace/>
    </question>
    <question type="text">
        <text>Add meg a not-equal (nem egyenlő) operátort.</text>
        <correct>!=</correct>
    </question>
    <question type="multi_choice">
        <text>Mely operátorok használhatóak két egész szám összehasonlítására?</text>
        <answer><![CDATA[
            <=
        ]]></answer>
        <answer>!=</answer>
        <answer> == </answer>
        <answer> + </answer>
        <correct>0</correct>
        <correct>1</correct>
        <correct>2</correct>
    </question>
    <question type="single_choice">
        <text>Melyik primitív típuson használhatjuk a negate (tagadás) operátort?</text>
        <answer>char</answer>
        <answer>long</answer>
        <answer>float</answer>
        <answer>boolean</answer>
        <correct>3</correct>
    </question>
    <question type="multi_choice">
        <text>Melyik operátorral végezhetünk logikai műveleteket két boolean-on?</text>
        <answer><![CDATA[
        &&
        ]]></answer>
        <answer><![CDATA[
        ||
        ]]></answer>
        <answer><![CDATA[
        =
        ]]></answer>
        <answer><![CDATA[
        /
        ]]></answer>
        <correct>0</correct>
        <correct>1</correct>
    </question>
    <question type="true_false">
        <text>Ha van egy 'sel' nevű boolean, akkor a helyes módja a tagadásának a '!sel'.</text>
        <correct>true</correct>
    </question>
    <question type="true_false">
        <text>Ha van egy 'sel' nevű boolean, akkor a helyes módja a tagadásának a '!=sel'.</text>
        <correct>false</correct>
    </question>
    <question type="text">
        <text>Add meg az ÉS operátort.</text>
        <correct>&amp;&amp;</correct>
    </question>
    <question type="text">
        <text>Add meg a VAGY operátort.</text>
        <correct>||</correct>
    </question>
    <question type="multi_choice">
        <text>Van két boolean, a igaz, b hamis. Melyik művelet lesz igaz?</text>
        <answer><![CDATA[
        a && b
        ]]></answer>
        <answer><![CDATA[
        a || b
        ]]></answer>
        <answer><![CDATA[
        a ^ b
        ]]></answer>
        <correct>1</correct>
        <correct>2</correct>
    </question>
    <question type="multi_choice">
        <text>Van két boolean, a és b egyaránt igaz. Melyik művelet lesz igaz?</text>
        <answer><![CDATA[
        a && b
        ]]></answer>
        <answer><![CDATA[
        a || b
        ]]></answer>
        <answer><![CDATA[
        a ^ b
        ]]></answer>
        <correct>0</correct>
        <correct>1</correct>
    </question>

    <!-- Questions for if-else -->
    <question type="true_false">
        <text>Minden if blokkhoz egy else blokknak is kell tartoznia.</text>
        <correct>false</correct>
    </question>
    <question type="multi_choice">
        <text>Melyik blokk állhat önmagában, más blokkok nélkül?</text>
        <answer>else</answer>
        <answer>if</answer>
        <answer>else if</answer>
        <answer>switch</answer>
        <correct>1</correct>
        <correct>3</correct>
    </question>

    <!-- Questions for loops -->
    <question type="single_choice">
        <text>Melyik ciklust érdemes használni, ha előre tudjuk, hogy hányszor kell ismételni?</text>
        <answer>for loop</answer>
        <answer>while loop</answer>
        <answer>do-while loop</answer>
        <correct>0</correct>
    </question>
    <question type="single_choice">
        <text>Melyik ciklust érdemes használni, ha nem tudjuk előre, hányszor kell ismételni?</text>
        <answer>for loop</answer>
        <answer>while loop</answer>
        <correct>1</correct>
    </question>
    <question type="true_false">
        <text>A for ciklus mindhárom összetevője (iterátor változó létrehozása, megállási feltétel, iterátor frissítése) kötelező.</text>
        <correct>false</correct>
    </question>
    <question type="multi_choice">
        <text>Melyek a jó nevek az iterátor változóknak?</text>
        <answer>x</answer>
        <answer>var</answer>
        <answer>i</answer>
        <answer>j</answer>
        <correct>2</correct>
        <correct>3</correct>
    </question>
    <question type="single_choice">
        <text>Mi a helyes a ciklus megállási feltételével kapcsolatban?</text>
        <válasz>Ez soha nem engedi meg a végtelen ciklusokat.</válasz>
        <válasz>Amikor ez a feltétel hamis lesz, a ciklus leáll.</válasz>
        <válasz>Amikor ez a feltétel igazzá válik, a ciklus leáll.</válasz>
        <válasz>A for ciklus létrehozásakor ez az utolsó komponens.</válasz>
        <correct>1</correct>
    </question>
    <question type="single_choice">
        <text>Mit csinál az i++?</text>
        <válasz>Megnöveli az i változót.</válasz>
        <válasz>Elkészít egy for ciklust, ahol az i az iterátor változó.</válasz>
        <válasz>Csökkenti az i változót.</válasz>
        <válasz>Az i értékét 0-ra állítja.</válasz>
        <correct>0</correct>
    </question>
    <question type="single_choice">
        <text>Mit csinál j--?</text>
        <válasz>Elkészít egy while ciklust, ahol j az iterátor változó.</válasz>
        <válasz>Eggyel növeli a j változót.</válasz>
        <válasz>Csökkenti a j változót.</válasz>
        <válasz>Törli a j változót, nem használható fel újra.</válasz>
        <correct>2</correct>
    </question>
    <question type="text">
        <text>Írd meg az utasítást, amely csökkenti k értékét.</text>
        <correct>k--;</correct>
        <correct>--k;</correct>
    </question>
    <question type="text">
        <text>Írd meg az utasítást, amely növeli a j értékét.</text>
        <correct>j++;</correct>
        <correct>++j;</correct>
    </question>
    <question type="single_choice">
        <text>Mi a különbség a while és a do-while ciklus között?</text>
        <válasz>Semmi.</answer>
        <válasz>A do-while ciklus soha nem lehet végtelen, a while ciklus viszont igen.</válasz>
        <válasz>A while ciklusnak speciális szintaxisa van egy iterátor változó deklarálására, a do-while ciklusnak nincs.</válasz>
        <válasz>A do-while ciklus garantáltan legalább egyszer fut, a while ciklus nem.</answer>
        <correct>3</correct>
    </question>
    <question type="multi_choice">
        <text>Mi ugyanaz a for és a while ciklusban?</text>
        <válasz>Akár végtelen ciklusok is lehetnek.</válasz>
        <válasz>Mindkettőnek speciális szintaxisa van az iterátor változókra.</válasz>
        <válasz>A break és a continue utasításokat mindkettőben használhatjuk.</válasz>
        <correct>0</correct>
        <correct>2</correct>
    </question>
    <question type="single_choice">
        <text>Mit csinál a break utasítás?</text>
        <válasz>Frissíti az iterátor változó értékét.</válasz>
        <válasz>Megállítja a ciklust.</válasz>
        <válasz>Átugrik ciklus következő futására.</válasz>
        <correct>1</correct>
    </question>
    <question type="text">
        <text>Adja meg azt az utasítást, amely megállítja a ciklust.</text>
        <correct>break;</correct>
    </question>
    <question type="single_choice">
        <text>Mit csinál a continue utasítás?</text>
        <válasz>Egy break utasítás után használjuk, újraindítja a ciklust.</válasz>
        <válasz>Módosítja az iterátor változó értékét.</válasz>
        <válasz>Megállítja a ciklust.</válasz>
        <válasz>Átugrik ciklus következő futására.</válasz>
        <correct>3</correct>
    </question>
    <question type="text">
        <text>Add meg az utasítást, ami átugrik ciklus következő futására.</text>
        <correct>continue;</correct>
    </question>
    <question type="single_choice">
        <text>Mi a végtelen ciklus?</text>
        <válasz>Egy olyan ciklus, ahol a befejező feltétel soha nem lesz hamis.</válasz>
        <válasz>Egy speciális while ciklus.</válasz>
        <válasz>Akkor következik be, ha elfelejtjük a záró zárójelet írni egy ciklushoz.</válasz>
        <válasz>Egy speciális for ciklus.</válasz>
        <correct>0</correct>
    </question>

    <!-- Questions for arrays -->
    <question type="single_choice">
        <text>Melyik a helyes állítás egy integer tömb deklarálására?</text>
        <answer>int[] data = new int[];</answer>
        <answer>String[] data = new String[5];</answer>
        <answer>int[] data = new int[10];</answer>
        <answer>[]int data = new [10]int;</answer>
        <correct>2</correct>
    </question>
    <question type="single_choice">
        <text>Melyik a helyes állítás egy 20 hosszúságú String tömb deklarálására?</text>
        <answer>int[] texts = new int[20];</answer>
        <answer>String[] texts = new String[5];</answer>
        <answer>String[20] texts = new String[];</answer>
        <answer>String[] texts = new String[20]</answer>
        <correct>3</correct>
    </question>
    <question type="true_false">
        <text>A boolean tömb elemei automatikusan false-ra inicializálódnak.</text>
        <correct>true</correct>
    </question>
    <question type="true_false">
        <text>A String tömb elemei automatikusan 0-ra inicializálódnak.</text>
        <correct>false</correct>
    </question>
    <question type="text">
        <text>Mi az első elem indexe egy tömbben?</text>
        <correct>0</correct>
    </question>
    <question type="text">
        <text>Mi a 10. elem indexe egy tömbben?</text>
        <correct>9</correct>
    </question>
    <question type="single_choice">
        <text>Egy tömb hossza N. Mi történik, ha az N indexű elemre hivatkozunk?</text>
        <válasz>Megkapjuk a hivatkozott elemet.</válasz>
        <válasz>Egy ArrayIndexOutOfOfBoundsException következik be.</válasz>
        <válasz>Egy NullPointerException következik be.</válasz>
        <válasz>A JVM kihagyja ezt az utasítást.</válasz>
        <correct>1</correct>
    </question>
    <question type="single_choice">
        <text>Egy tömb hossza N. Mi történik, ha az N-1 indexű elemre hivatkozunk?</text>
        <válasz>A hivatkozott elemet, a tömb utolsó elemét kapjuk meg.</válasz>
        <válasz>Egy ArrayIndexOutOfOfBoundsException következik be.</válasz>
        <válasz>Egy NullPointerException következik be.</válasz>
        <válasz>A hivatkozott elemet, a tömb első elemét kapjuk meg.</válasz>
        <correct>0</correct>
    </question>
    <question type="text">
        <text>Deklaráljon egy karakter tömböt a 'letters' névvel és 25 hosszúsággal.</text>
        <correct>char[][s]letters = new[s]char[ 25 ];</correct>
        <correct>char[s]letters[] = new[s]char[ 25 ];</correct>
        <correct>Character[][s]letters = new[s]Character[ 25 ];</correct>
        <correct>Character[s]letters[] = new[s]Character[ 25 ];</correct>
        <ignoreSpace/>
    </question>
    <question type="text">
        <text>Deklaráljuk a 'sentences' nevű, 100 hosszúságú String tömböt.</text>
        <correct>String[][s]sentences = new[s]String[ 100 ];</correct>
        <correct>String[s]sentences[] = new[s]String[ 100 ];</correct>
        <ignoreSpace/>
    </question>

    <!-- Questions for getting input -->
    <question type="single_choice">
        <text>Hogyan érhetjük el a parancssori argumentumokat futás közben?</text>
        <válasz>Nem tudjuk, elvesznek.</answer>
        <válasz>A main metódus paramétereként kapjuk őket, egy egész számokból álló tömbként.</válasz>
        <válasz>A main metódus paramétereként kapjuk őket, egy String-ekből álló tömbként.</válasz>
        <válasz>A fő osztály egy statikus változójába töltődnek be, az args nevű statikus változóba.</válasz>
        <correct>2</correct>
    </question>
    <question type="text">
        <text>Van egy 'textData' nevű String-ünk. Írjunk egy olyan utasítást, amely egy újonnan létrehozott egész számra konvertálja, 'data' néven!</text>
        <correct>int[s]data = Integer.parseInt( "textData" );</correct>
        <correct>Integer[s]data = Integer.parseInt( "textData" );</correct>
        <ignoreSpace/>
    </question>
    <question type="single_choice">
        <text>Mi történik, ha az Integer.parseInt paramétere nem megfelelő formájú?</text>
        <válasz>A metódus 0-t ad vissza.</answer>
        <válasz>Egy NumberFormatException-t dob.</válasz>
        <válasz>A metódust az Integer.MIN_VALUE értéket adja vissza</válasz>
        <answer>A NullPointerException-t dobja.</answer>
        <correct>1</correct>
    </question>
    <question type="true_false">
        <text>Lehetséges olyan kódot írni, amely ellenőrzi, hogy hány parancssori argumentumot kapott a program.</text>
        <correct>true</correct>
    </question>
    <question type="single_choice">
        <text>Mi a System.in?</text>
        <válasz>Ez egy szkenner objektum, amelyet a Java inicializál.</válasz>
        <válasz>Ez egy InputStream objektum, amelyet a Java inicializál. Fájl bemenetre figyel.</answer>
        <válasz>Egy változó, amelybe a JVM betölti a parancssori érveket.</válasz>
        <válasz>Ez egy InputStream objektum, amelyet a Java inicializál. A billentyűzet bemenetet figyeli.</answer>
        <correct>3</correct>
    </question>
    <question type="true_false">
        <text>A Scanner objektumot be kell zárni, amikor befejezzük a használatát.</text>
        <correct>false</correct>
    </question>
    <question type="true_false">
        <text>A Scanner objektumot ajánlott bezárni, ha befejeztük a használatát.</text>
        <correct>true</correct>
    </question>
    <question type="text">
        <text>Írj egy utasítást, amely létrehoz egy 's' nevű Scanner-t a standard bemenetre!</text>
        <correct>Scanner[s]s = new[s]Scanner( System.in );</correct>
        <ignoreSpace/>
    </question>
    <question type="text">
        <text>Van egy 's' nevű Scanner, amely a standard bemenetre van hangolva. Írjunk egy utasítást, amely beolvas egy sor szöveget 
        a felhasználótól, és elmenti a 'userInput' nevű String-be!</text>
        <correct>String[s]userInput = s.nextLine();</correct>
        <ignoreSpace/>
    </question>
    <question type="text">
        <text>Van egy 's' nevű Scanner, amely a standard bemenetre van hangolva. Írjunk egy utasítást, amely beolvas egy egész számot 
            a felhasználótól, és elmenti egy 'userInput' nevű int változóba!</text>
        <correct>int[s]userInput = s.nextInt();</correct>
        <correct>Integer[s]userInput = s.nextInt();</correct>
        <ignoreSpace/>
    </question>
    <question type="text">
        <text>Melyik osztályt használjuk egy fájl összes sorának azonnali beolvasására?</text>
        <correct>Files</correct>
        <correct>java.nio.file.Files</correct>
    </question>
    <question type="single_choice">
        <text>Mi történik, ha egy nem létező fájlt próbálunk beolvasni?</text>
        <válasz>Egy NoSuchFileException vagy egy FileNotFoundException kerül kidobásra.</válasz>
        <válasz>Egy üres listát kapunk vissza.</válasz>
        <válasz>A fájl létrejön, és a beolvasás újra megtörténik.</válasz>
        <válasz>A NumberFormatException-t dobódik.</válasz>
        <correct>0</correct>
    </question>

    <!-- Questions for output -->
    <question type="text">
        <text>Mi a sortörés karakter Java-ban?</text>
        <correct><![CDATA[
            \n
        ]]></correct>
    </question>
    <question type="true_false">
        <text>A Println a print line rövidítése.</text>
        <correct>true</correct>
    </question>
    <question type="true_false">
        <text>A PrintWriter 'print' metódusai írnak egy sortörést a paraméterük kiírása után.</text>
        <correct>false</correct>
    </question>
    <question type="multi_choice">
        <text>Melyik igaz a PrintWriter osztályra?</text>
        <válasz>A felhasználó adatainak beolvasására szolgál.</válasz>
        <válasz>Ez egy bemeneti (input) osztály.</válasz>
        <válasz>Szövegnek (vagy egyéb adatnak) a konzolra való írására szolgál.</válasz>
        <válasz>Szöveg (vagy egyéb adatnak) fájlba való írására szolgál.</válasz>
        <correct>2</correct>
        <correct>3</correct>
    </question>
    <question type="single_choice">
        <text>Mi történik (alapértelmezés szerint), amikor egy új PrintWriter egy meglévő fájlba kezd nyomtatni?</text>
        <válasz>A sorok a fájl végére lesznek csatolva.</válasz>
        <válasz>Egy kivétel dobódik.</válasz>
        <válasz>A fájl tartalma a nyomtatás előtt törlődik.</válasz>
        <correct>2</correct>
    </question>
    <question type="true_false">
        <text>A PrintWriter nem konfigurálható úgy, hogy meglévő fájlhoz csatolja az új sorokat.</text>
        <correct>false</correct>
    </question>
    <question type="true_false">
        <text>A Files segédosztály metódusokat biztosít a fájlokból való olvasáshoz és a fájlba való íráshoz.</text>
        <correct>true</correct>
    </question>


    <!--
    <question type="single_choice">
        <text></text>
        <answer></answer>
        <answer></answer>
        <answer></answer>
        <answer></answer>
        <correct></correct>
    </question>

    <question type="multi_choice">
        <text></text>
        <answer></answer>
        <answer></answer>
        <answer></answer>
        <answer></answer>
        <correct></correct>
        <correct></correct>
    </question>

    <question type="true_false">
        <text></text>
        <correct></correct>
    </question>

    <question type="text">
        <text></text>
        <correct></correct>
        <correct></correct>
    </question>
    -->

</resources>
