<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!-- Exam of course 'Data structures' --><resources>
    <examdata>
        <id>20</id>
        <questionAmount>25</questionAmount>
        <timeLimit>30</timeLimit>
        <finished>true</finished>
    </examdata>

    <!-- Questions for 'problems with arrays' -->
    <question type="single_choice">
        <text>Mi a különbség a tömbök és a kollekciók között?</text>
        <answer>A tömbök nem támogatják a primitív típusokat, míg a kollekciók igen.</answer>
        <answer>A kollekciók mindig rendezetlenek, míg a tömbök megtartják az elemeik sorrendjét.</answer>
        <answer>A tömbök a Java beépített koncepciója, míg a kollekciók osztályok.</answer>
        <answer>A kollekcióknak nincs méretkorlátozásuk, míg a tömbök csak 1000 elemig támogatják az elemeket.</answer>
        <correct>2</correct>
    </question>
    <question type="multi_choice">
        <text>Mi igaz a JDK kollekciókra?</text>
        <answer>Minden típusú elemet támogatnak.</answer>
        <answer>Generikus osztályok.</answer>
        <answer>A méretük fix.</answer>
        <answer>Nem támogatják a primitív elemtípusokat.</answer>
        <correct>1</correct>
        <correct>3</correct>
    </question>
    <question type="multi_choice">
        <text>Melyek a tömbök korlátozó tényezői?</text>
        <answer>A méretük a létrehozásuk után fix.</answer>
        <answer>A tömbök nem használhatók hatékonyan, ha az elemek mennyisége előre ismeretlen.</answer>
        <answer>Kizárólag primitív típusokat támogatnak.</answer>
        <answer>A tömbök csak legfeljebb 1000 elemet tudnak tárolni.</answer>
        <correct>0</correct>
        <correct>1</correct>
    </question>
    <question type="multi_choice">
        <text>Melyek ezek közül az adatstruktúrák?</text>
        <answer>Tömbök.</answer>
        <answer>Listák.</answer>
        <answer>Fájlok.</answer>
        <answer>Szótárak.</answer>
        <correct>0</correct>
        <correct>1</correct>
        <correct>3</correct>
    </question>
    <question type="text">
        <text>Deklaráld és inicializáld a String-ek egy tömblistáját, 'lines' néven!</text>
        <correct>ArrayList&lt;String&gt;[s]lines = new[s]ArrayList&lt;&gt;();</correct>
        <correct>List&lt;String&gt;[s]lines = new[s]ArrayList&lt;&gt;();</correct>
		<correct>ArrayList&lt;String&gt;[s]lines = new[s]ArrayList&lt;String&gt;();</correct>
		<correct>List&lt;String&gt;[s]lines = new[s]ArrayList&lt;String&gt;();</correct>
        <ignoreSpace/>
    </question>
    <question type="text">
        <text>Deklaráld és inicializáld az egész számok egy láncolt listáját, 'nums' néven!</text>
        <correct>LinkedList&lt;Integer&gt;[s]nums = new[s]LinkedList&lt;&gt;();</correct>
        <correct>List&lt;Integer&gt;[s]nums = new[s]LinkedList&lt;&gt;();</correct>
		<correct>LinkedList&lt;Integer&gt;[s]nums = new[s]LinkedList&lt;Integer&gt;();</correct>
		<correct>List&lt;Integer&gt;[s]nums = new[s]LinkedList&lt;Integer&gt;();</correct>
        <ignoreSpace/>
    </question>
    <question type="text">
        <text>Írd be a 'gyémánt' opertátort, ami kollekciók létrehozásakor használható!</text>
        <correct>&lt;&gt;</correct>
    </question>
    <question type="true_false">
        <text>Az generikus kollekciók közvetlenül támogatják a primitív típusokat.</text>
        <correct>false</correct>
    </question>
    <question type="true_false">
        <text>Az generikus kollekciók közvetve (wrapperek segítségével) támogatják a primitíveket.</text>
        <correct>true</correct>
    </question>
    <question type="text">
        <text>Mi a JDK adatszerkezetek közös, legfelsőbb interfésze?</text>
        <correct>Collection</correct>
        <correct>java.util.Collection</correct>
    </question>

    <!-- Questions for lists -->
    <question type="multi_choice">
        <text>Melyik interfészeket valósítják meg a JDK-ban található listák?</text>
        <answer>java.util.List</answer>
        <answer>java.util.Map</answer>
        <answer>java.lang.Runnable</answer>
        <answer>java.util.Collection</answer>
        <correct>0</correct>
        <correct>3</correct>
    </question>
    <question type="text">
        <text>Melyik JDK lista implementáció használ belső tömböt (az osztály nevét add meg)?</text>
        <correct>ArrayList</correct>
        <correct>java.util.ArrayList</correct>
    </question>
    <question type="text">
        <text>Melyik JDK lista implementáció használ elemreferenciák láncolatát az adatok tárolására (az osztály nevét add meg)?</text>
        <correct>LinkedList</correct>
        <correct>java.util.LinkedList</correct>
    </question>
    <question type="single_choice">
        <text>Mi a különbség a tömblisták és a láncolt listák között?</text>
        <answer>A JDK csak láncolt lista implementációkkal rendelkezik.</answer>
        <answer>Csak a tömblisták képesek dinamikusan helyet biztosítani tetszőleges számú elemnek.</answer>
        <answer>A belső működésük eltérő.</answer>
        <answer>Semmi, a tömblista csak egy másik név a láncolt lista számára.</answer>
        <correct>2</correct>
    </question>
    <question type="single_choice">
        <text>Milyen műveletet tudnak hatékonyan elvégezni a tömblisták?</text>
        <answer>Elemek pozíció szerinti lekérdezése.</answer>
        <answer>A belső tömbjük átméretezését.</answer>
        <answer>Elemek beillesztése tetszőleges pozícióba.</answer>
        <answer>Elemek eltávolítása bármely pozícióból.</answer>
        <correct>0</correct>
    </question>
    <question type="multi_choice">
        <text>Milyen műveleteket tudnak hatékonyan végrehajtani a láncolt listák?</text>
        <answer>Elemek pozíció alapján történő lekérdezése.</answer>
        <answer>Az első elem kinyerése.</answer>
        <answer>Elem beillesztése tetszőleges pozícióba.</answer>
        <correct>1</correct>
        <correct>2</correct>
    </question>
    <question type="single_choice">
        <text>Mi az a duplán láncolt lista?</text>
        <answer>Láncolt lista további listák számára számára.</answer>
        <answer>A lista két összekapcsolt "láncban" tárolja az elemeit.</answer>
        <answer>Egy elem nem csak a következő elemre való hivatkozást tárolja, hanem az előzőre valót is.</answer>
        <correct>2</correct>
    </question>
    <question type="true_false">
        <text>A duplán láncolt listák általában hatékonyabbak, mint az egszeresen láncoltak, de nehezebb őket leprogramozni.</text>
        <correct>true</correct>
    </question>
    <question type="true_false">
        <text>Egy tömb alapú lista mindig hatékonyabb, mint egy láncolt lista.</text>
        <correct>false</correct>
    </question>

    <!-- Questions about queues and stacks -->
    <question type="text">
        <text>Melyik rövidítést használják a sorok működésének leírására?</text>
        <correct>FIFO</correct>
        <ignoreCase/>
    </question>
    <question type="text">
        <text>Melyik betűszóval írják le a veremek működését?</text>
        <correct>LIFO</correct>
        <ignoreCase/>
    </question>
	
    <question type="multi_choice">
        <text>Mi igaz a sorokra?</text>
        <answer>Ezek speciális, korlátozot listák.</answer>
        <answer>Ezek 'last-in-first-out' jellegű adatstruktúrák.</answer>
        <answer>Kizárólag a végükön engedik meg az elemek hozzáadását és eltávolítását.</answer>
        <answer>Ezek szótárak.</answer>
        <correct>0</correct>
        <correct>2</correct>
    </question>
    <question type="multi_choice">
        <text>Mi igaz a vermekre?</text>
        <answer>Ezek 'last-in-first-out' adatszerkezetek.</answer>
        <answer>Ezek szótárak.</answer>
        <answer>Kizárólag a "tetejükön" lehet elemeket hozzáadni és eltávolítani.</answer>
        <answer>Ezek 'first-in-first-out' adatszerkezetek.</answer>
        <correct>0</correct>
        <correct>2</correct>
    </question>
    <question type="true_false">
        <text>A verem egy FIFO adatszerkezet.</text>
        <correct>false</correct>
    </question>
    <question type="true_false">
        <text>A verem egy LIFO adatszerkezet.</text>
        <correct>true</correct>
    </question>
    <question type="true_false">
        <text>A sor egy FIFO adatszerkezet.</text>
        <correct>true</correct>
    </question>
    <question type="multi_choice">
        <text>Melyik  metódusokkal rendelkezik egy verem?</text>
        <answer>push</answer>
        <answer>collect</answer>
        <answer>pop</answer>
        <answer>peek</answer>
        <correct>0</correct>
        <correct>2</correct>
        <correct>3</correct>
    </question>
    <question type="single_choice">
        <text>Mi a különbség a kétvégű és a normál sorok között?</text>
        <answer>A kétvégű sor egy olyan adatstruktúra, amely csak az egyik oldalról fogad és távolít el elemeket.</answer>
        <answer>A kétvégű sorok mindkét oldalon fogadhatnak és távolíthatnak el elemeket.</answer>
        <answer>A kétvégű sor egy olyan adatszerkezet, amely két sorból áll össze.</answer>
        <correct>1</correct>
    </question>
    <question type="text">
        <text>Mi a neve a JDK-ban a kétvégű sorok interfészének?</text>
        <correct>Deque</correct>
        <correct>java.util.Deque</correct>
    </question>
    <question type="true_false">
        <text>A vermek nem lehetnek generikusak.</text>
        <correct>false</correct>
    </question>

    <!-- Questions about maps -->
    <question type="single_choice">
        <text>Mi a különbség a listák és a szótárak között?</text>
        <answer>A szótárak nem adatszerkezetek, a listák viszont igen.</answer>
        <answer>A JDK szótár implementációi nem generikusak, a listák viszont igen.</answer>
        <answer>A szótárak elempárokat tartalmaznak, míg a listák elemet sorozatát.</answer>
        <correct>2</correct>
    </question>
    <question type="single_choice">
        <text>Mi a szótárak másik neve?</text>
        <answer>Verem.</answer>
        <answer>Map.</answer>
        <answer>Sor.</answer>
        <answer>Pár.</answer>
        <correct>1</correct>
    </question>
    <question type="true_false">
        <text>A Java-ban a listák be vannak építve a nyelvbe, nincs szükség lista osztályokra.</text>
        <correct>false</correct>
    </question>
    <question type="text">
        <text>Milyen interfészt valósítanak meg a szótárak a JDK-ban?</text>
        <correct>Map</correct>
        <correct>java.util.Map</correct>
    </question>
    <question type="multi_choice">
        <text>Ezek közül melyekből állnak össze egy szótár párjai?</text>
        <answer>Kulcsok.</answer>
        <answer>Kollekciók.</answer>
        <answer>Listák.</answer>
        <answer>Értékek.</answer>
        <correct>0</correct>
        <correct>3</correct>
    </question>
    <question type="multi_choice">
        <text>Mi igaz a szótárakra?</text>
        <answer>Elempárokat tartalmaznak.</answer>
        <answer>A duplikált kulcsok megengedettek.</answer>
        <answer>A duplikált értékek megengedettek.</answer>
        <answer>A szótár kulcsai mindig egész számok.</answer>
        <correct>0</correct>
        <correct>2</correct>
    </question>
    <question type="true_false">
        <text>A szótárakból hatékonyan lekérdezhetünk egy értéket, ha megadunk egy kulcsot.</text>
        <correct>true</correct>
    </question>

    <!-- Questions about collection utilities -->
    <question type="true_false">
        <text>Vannak csak olvasható kollekciók.</text>
        <correct>true</correct>
    </question>
    <question type="text">
        <text>Melyik JDK-s osztály nyújt segéd metódusokat az adatszerkezetekhez?</text>
        <correct>Collections</correct>
        <correct>java.util.Collections</correct>
    </question>
    <question type="text">
        <text>Melyik interfészt kell megvalósítani, ha az objektumok között rendezést akarunk meghatározni?</text>
        <correct>Comparable</correct>
        <correct>java.lang.Comparable</correct>
    </question>
    <question type="true_false">
        <text>Azok a metódusok, amelyek az elemek rendezhetőségét igénylik, működni fognak wrapperek esetében.</text>
        <correct>true</correct>
    </question>
    <question type="true_false">
        <text>Az elemek rendezhetőségét igénylő metódusok a String-ekre működnek.</text>
        <correct>true</correct>
    </question>
    <question type="true_false">
        <text>Az elemek rendezhetőségét igénylő metódusok bármely osztály esetében működnek.</text>
        <correct>false</correct>
    </question>
    <question type="text">
        <text>A compareTo metódusban összehasonlítjuk az aktuális objektumot egy másikkal, és azt találjuk, hogy egyenlőek. Mit adjunk vissza?</text>
        <correct>0</correct>
    </question>
	<question type="text">
        <text>A compareTo metódusban összehasonlítjuk az aktuális objektumot egy másikkal, és azt találjuk, hogy az aktuális nagyobb. Mit adjunk vissza?</text>
        <correct>1</correct>
    </question>
	<question type="text">
        <text>A compareTo metódusban összehasonlítjuk az aktuális objektumot egy másikkal, és azt találjuk, hogy a másik nagyobb. Mit adjunk vissza?</text>
        <correct>-1</correct>
    </question>
    <question type="multi_choice">
        <text>Mely interfészek tartoznak a Java kollekciók keretrendszeréhez?</text>
        <answer>java.util.List</answer>
        <answer>java.lang.Comparable</answer>
        <answer>java.util.Map</answer>
        <answer>java.io.Serializable</answer>
        <correct>0</correct>
        <correct>2</correct>
    </question>
    <question type="multi_choice">
        <text>Mely gyűjtemények tartják fenn az elemeik sorrendjét?</text>
        <answer>Listák.</answer>
        <answer>Halmazok.</answer>
        <answer>Szótárak.</answer>
        <answer>Vermek.</answer>
        <correct>0</correct>
        <correct>3</correct>
    </question>

    <!--
    <question type="single_choice">
        <text></text>
        <answer></answer>
        <answer></answer>
        <answer></answer>
        <answer></answer>
        <correct></correct>
    </question>

    <question type="multi_choice">
        <text></text>
        <answer></answer>
        <answer></answer>
        <answer></answer>
        <answer></answer>
        <correct></correct>
        <correct></correct>
    </question>

    <question type="true_false">
        <text></text>
        <correct></correct>
    </question>

    <question type="text">
        <text></text>
        <correct></correct>
        <correct></correct>
    </question>
    -->
</resources>
