<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!-- Exam of course 'Java 8' --><resources>
    <examdata>
        <id>35</id>
        <questionAmount>20</questionAmount>
        <timeLimit>25</timeLimit>
        <finished>true</finished>
    </examdata>
    <!-- Questions about Java versions -->
    <question type="text">
        <text>Melyik annotáció jelöli az elavult kódot?</text>
        <correct>@Deprecated</correct>
    </question>
    <question type="single_choice">
        <text>A Java melyik verziójában került be a generikusság?</text>
        <answer>Java 5</answer>
        <answer>Java 8</answer>
        <answer>Java 7</answer>
        <answer>Java 11</answer>
        <correct>0</correct>
    </question>
    <question type="single_choice">
        <text>A Java melyik verziójában jelent meg a java.nio csomag?</text>
        <answer>Java 5</answer>
        <answer>Java 7</answer>
        <answer>Java 11</answer>
        <answer>Java 8</answer>
        <correct>1</correct>
    </question>
    <question type="single_choice">
        <text>A Java melyik verziójában jelentek meg a lambda kifejezések?</text>
        <answer>A Java nem támogatja a lambdákat.</answer>
        <answer>Java 11</answer>
        <answer>Java 8</answer>
        <answer>Java 7</answer>
        <correct>2</correct>
    </question>
    <question type="true_false">
        <text>Jó gyakorlat, ha elavult osztályokat használunk.</text>
        <correct>false</correct>
    </question>
    <question type="true_false">
        <text>A fordító hibát ad, ha elavult metódusokat használsz.</text>
        <correct>false</correct>
    </question>
    <question type="true_false">
        <text>Az elavultságot a forráskódban egy annotáció jelzi.</text>
        <correct>true</correct>
    </question>
    <question type="multi_choice">
        <text>Mi változhat egy új Java verzióban?</text>
        <answer>Új osztályok adhatók hozzá a szabványos könyvtárhoz.</answer>
        <answer>A szabványos könyvtár egyes részei elavulttá válhatnak.</answer>
        <answer>A korábban lefordított kód hibákat dobhat az új verzióban.</answer>
        <answer>Új kulcsszavak kerülhetnek bevezetésre.</answer>
        <correct>0</correct>
        <correct>1</correct>
        <correct>3</correct>
    </question>

    <!-- Questions about advanced interface techniques -->
    <question type="true_false">
        <text>A Java 8 előtt egy interfész teljesen absztrakt volt.</text>
        <correct>true</correct>
    </question>
    <question type="true_false">
        <text>A Java 8 utáni interfészeknek teljesen absztraktnak kell lenniük.</text>
        <correct>false</correct>
    </question>
    <question type="multi_choice">
        <text>Ezek közül melyiket tartalmazhatja egy Java 8 interfész?</text>
        <answer>Adattagok.</answer>
        <answer>Absztrakt metódusok.</answer>
        <answer>Implementációval rendelkező metódusok.</answer>
        <answer>Statikus metódusok.</answer>
        <correct>1</correct>
        <correct>2</correct>
        <correct>3</correct>
    </question>
    <question type="single_choice">
        <text>Melyek lehetnek ezek közül a Java 8 interfészekben, de az azt megelőző interfészekben nem?</text>
        <answer>Belső osztályok.</answer>
        <answer>Absztrakt metódusok.</answer>
        <answer>Adattagok.</answer>
        <answer>Statikus metódusok.</answer>
        <correct>3</correct>
    </question>
    <question type="single_choice">
        <text>Mi az 'default' (alapértelmezett) módszer egy Java 8 interfészben?</text>
        <answer>Ez egy másik neve a statikus metódusoknak.</answer>
        <answer>Egy interfész metódus, de implementációval.</answer>
        <answer>Ez egy másik neve az absztrakt metódusoknak.</answer>
        <answer>Egy interfész metódus, de implementáció nélkül.</answer>
        <correct>1</correct>
    </question>
    <question type="text">
        <text>Milyen kulcsszót használjuk annak deklarálására, hogy egy interfész metódusnak van implementációja?</text>
        <correct>default</correct>
    </question>
    <question type="text">
        <text>Melyik kulcsszót kell használni egy olyan metódus deklarálásához, amely az interfészhez, és nem az abból létrejövő objektumhoz tartozik?</text>
        <correct>static</correct>
    </question>
    <question type="single_choice">
        <text>Mi a funkcionális interfész?</text>
        <answer>Egy olyan interfész, amely nem tartalmaz absztrakt metódusokat.</answer>
        <answer>Egy interfész egy alapértelmezett metódussal.</answer>
        <answer>Egy interfész egy absztrakt metódussal.</answer>
        <answer>Egy interfész, amelynek metódusai más függvényeket hívnak.</answer>
        <correct>2</correct>
    </question>
    <question type="text">
        <text>Milyen mannotációt használhatunk a funkcionális interfészek jelölésére?</text>
        <correct>@FunctionalInterface</correct>
    </question>
    <question type="single_choice">
        <text>Hol találhatók a szabványos könyvtár funkcionális interfészei?</text>
        <answer>java.nio</answer>
        <answer>java.util</answer>
        <answer>java.util.function</answer>
        <answer>java.lang</answer>
        <correct>2</correct>
    </question>
    <question type="true_false">
        <text>A funkcionális interfész annotációt kötelező a funkcionális interfészekre rakni.</text>
        <correct>false</correct>
    </question>
    <question type="true_false">
        <text>A fordító figyelmeztetést generál, ha egy interfész funkcionálisnak van jelölve, de nem az.</text>
        <correct>false</correct>
    </question>
    <question type="true_false">
        <text>A fordító hibaüzenettel áll le, ha egy interfész funkcionálisnak van jelölve, de nem az.</text>
        <correct>true</correct>
    </question>
    <question type="single_choice">
        <text>Melyik lehet egy normál interfészben, de egy funkcionális interfészben nem?</text>
        <answer>Statikus metódusok.</answer>
        <answer>Adattagok.</answer>
        <answer>Alapértelmezett (implementációs) metódusok.</answer>
        <answer>Több absztrakt metódus.</answer>
        <correct>3</correct>
    </question>

    <!-- Questions about lambda expressions -->
    <question type="single_choice">
        <text>Mi az a lambda kifejezés?</text>
        <answer>Egy funkcionális interfész absztrakt metódusa.</answer>
        <answer>Ez egy névtelen, helyben deklarált függvény.</answer>
        <answer>Egy funkcionális interfész.</answer>
        <answer>Ez egy olyan függvény, amelynek 1 paramétere van.</answer>
        <correct>1</correct>
    </question>
    <question type="single_choice">
        <text>Mi a korrekt szintaxis egy (általános) lambda kifejezéshez?</text>
        <answer>( utasítások ) -&gt; paraméterek</answer>
        <answer>{ paraméterek } -&gt; ( utasítások )</answer>
        <answer>{ paraméterek } -&gt; { utasítások }</answer>
        <answer>( paraméterek ) -&gt; { utasítások }</answer>
        <correct>3</correct>
    </question>
    <question type="multi_choice">
        <text>Melyik a helyes szintaxis az EGY paraméteres lambda esetében?</text>
        <answer>( paraméter ) -&gt; { utasítások }</answer>
        <answer>( utasítások ) -&gt; paraméter</answer>
        <answer>( utasítások ) -&gt; { paraméter }</answer>
        <answer>paraméter -&gt; { utasítások }</answer>
        <correct>0</correct>
        <correct>3</correct>
    </question>
    <question type="multi_choice">
        <text>Melyik a helyes szintaxis az EGY paramétert és EGY utasítást tartalmazó lambda esetében?</text>
        <answer>( paraméter ) -&gt; { statement }</answer>
        <answer>paraméter -&gt; ( utasítások )</answer>
        <answer>paraméter -&gt; statement</answer>
        <answer>paraméter -&gt; { statement }</answer>
        <correct>0</correct>
        <correct>2</correct>
        <correct>3</correct>
    </question>
    <question type="text">
        <text>Írj egy olyan lambda kifejezést, amelynek nincsenek paraméterei, és a println segítségével kiírja a "Lambda" szót a konzolra.</text>
        <correct>( ) -&gt; System.out.println( "Lambda" )</correct>
        <correct>( ) -&gt; { System.out.println("Lambda"); }</correct>
        <ignoreSpace/>
    </question>
    <question type="text">
        <text>Írj egy lambda kifejezést, amelynek egy int paramétere van 'n' névvel, és kétszer 'n'-et ad vissza. </text>
        <correct>n -&gt; n * 2</correct>
        <correct>( n ) -&gt; n * 2</correct>
        <correct>( n ) -&gt; { return[s]n * 2; }</correct>
        <correct>( int[s]n ) -&gt; n * 2</correct>
        <correct>( int[s]n ) -&gt; { return[s]n * 2; }</correct>
        <correct>( Integer[s]n ) -&gt; n * 2</correct>
        <correct>( Integer[s]n ) -&gt; { return[s]n * 2; }</correct>
        <correct>n -&gt; { return[s]n * 2; }</correct>
        <ignoreSpace/>
    </question>
    <question type="text">
        <text>Írjunk egy lambda kifejezést, amelynek egy String paramétere van ('s' névvel), és ezt egy 'x' karakterrel a végén adja vissza.</text>
        <correct>s -&gt; s + 'x'</correct>
        <correct>( s ) -&gt; s + 'x'</correct>
        <correct>( String[s]s ) -&gt; s + 'x'</correct>
        <correct>s -&gt; { return[s]s + 'x'; }</correct>
        <correct>( s ) -&gt; { return[s]s + 'x'; }</correct>
        <correct>( String[s]s ) -&gt; { return s + 'x'; }</correct>
        <correct>s -&gt; s.append( 'x' )</correct>
        <correct>( s ) -&gt; s.append( 'x' )</correct>
        <correct>( String[s]s ) -&gt; s.append( 'x' )</correct>
        <correct>s -&gt; { return[s]s.append( 'x' ); }</correct>
        <correct>( s ) -&gt; { return[s]s.append( 'x' ); }</correct>
        <correct>( String[s]s ) -&gt; { return[s]s.append( 'x' ); }</correct>
        <ignoreSpace/>
    </question>
    <question type="text">
        <text>Írj egy lambdát, amelynek 2 int paramétere van ('a' és 'b'), és az összegüket adja vissza.</text>
        <correct>( a , b ) -&gt; a + b</correct>
        <correct>( a , b ) -&gt; { return[s]a + b; }</correct>
        <correct>( int[s]a , int[s]b ) -&gt; a + b</correct>
        <correct>( int[s]a , int[s]b ) -&gt; { return[s]a + b; }</correct>
        <correct>( Integer[s]a , Integer[s]b ) -&gt; a + b</correct>
        <correct>( Integer[s]a , Integer[s]b ) -&gt; { return[s]a + b; }</correct>
        <ignoreSpace/>
    </question>
    <question type="text">
        <text>Írjunk egy lambdát, amelynek van egy String paramétere ('s'), és igazat ad, ha a String hosszabb, mint 4 karakter.</text>
        <correct>s -&gt; s.length() &gt; 4</correct>
        <correct>( s ) -&gt; s.length() &gt; 4</correct>
        <correct>( String[s]s ) -&gt; s.length() &gt; 4</correct>
        <correct>s -&gt; { return[s]s.length() &gt; 4; }</correct>
        <correct>( s ) -&gt; { return[s]s.length() &gt; 4; }</correct>
        <correct>( String[s]s ) -&gt; { return[s]s.length() &gt; 4; }</correct>
        <ignoreSpace/>
    </question>
    <question type="true_false">
        <text>A '() -&gt; System.out.println("k")' lambdát értékül lehet adni egy Runnable-nek (0 paraméter, nincs visszatérési érték).</text>
        <correct>true</correct>
    </question>
    <question type="true_false">
        <text>A '(n) -&gt; System.out.println(n)' lambdát értékül lehet adni egy Runnable-nek (0 paraméter, nincs visszatérési érték).</text>
        <correct>false</correct>
    </question>
    <question type="true_false">
        <text>A '(n) -&gt; System.out.println(n)' lambdát értékül lehet adni egy Consumer-nek (1 paraméter, nincs visszatérési érték).</text>
        <correct>true</correct>
    </question>
    <question type="true_false">
        <text>A Supplier nem vár paramétert és egy értéket ad vissza. A '() -&gt; 3' lambda értékül adható ennek.</text>
        <correct>true</correct>
    </question>
    <question type="multi_choice">
        <text>answerd ki a paraméteres lambdákat!</text>
        <answer>() -&gt; 3.14</answer>
        <answer>(n) -&gt; Math.pow(n,2)</answer>
        <answer>() -&gt; System.out.print("Java")</answer>
        <answer>text -&gt; text.replace('a','b')</answer>
        <correct>1</correct>
        <correct>3</correct>
    </question>
    <question type="true_false">
        <text>Az 'i -&gt; i+2' lambda kifejezés szabályos.</text>
        <correct>true</correct>
    </question>
    <question type="true_false">
        <text>Az 'var =&gt; var.toString()' lambda kifejezés szabályos.</text>
        <correct>false</correct>
    </question>
    <question type="true_false">
        <text>A 'v1,v2 -&gt; v1 + v2' lambda kifejezés szabályos.</text>
        <correct>false</correct>
    </question>
    <question type="text">
        <text>Milyen szimbólumokat használunk a lambda paraméterek és utasítások összekapcsolására?</text>
        <correct>-&gt;</correct>
    </question>

    <!-- Questions about streams -->
    <question type="single_choice">
        <text>Hogyan hozhatsz létre egy folyamot egy kollekcióból?</text>
        <answer>A Collections osztály 'stream' statikus metódusával.</answer>
        <answer>A Collection interfész 'stream' metódusával.</answer>
        <answer>A Stream osztály 'createFrom' statikus metódusával.</answer>
        <answer>Egy kollekció átadásával a Stream konstruktorába.</answer>
        <correct>1</correct>
    </question>
    <question type="single_choice">
        <text>Hogyan hozhatsz létre kolleckiót egy folyamból?</text>
        <answer>A Collection interfész statikus 'fromStream' metódusával.</answer>
        <answer>Folyamokból nem lehet kollekciót készíteni.</answer>
        <answer>A folyam 'collect' metódusával.</answer>
        <answer>A folyam 'map' metódusával.</answer>
        <correct>2</correct>
    </question>
    <question type="true_false">
        <text>Nincs semmilyen közvetlen vagy közvetett mód arra, hogy egy tömbből folyamot hozzunk létre, mivel az nem kollekció.</text>
        <correct>false</correct>
    </question>
    <question type="text">
        <text>A folyam melyik metódusát használjuk bizonyos elemek kianswertására egy feltétel alapján?</text>
        <correct>filter</correct>
    </question>
    <question type="text">
        <text>Egy folyam melyik metódusát használjuk arra, hogy egy függvényt alkalmazzunk a folyam összes elemére, és egy új folyamot hozzunk létre?</text>
        <correct>map</correct>
    </question>
    <question type="text">
        <text>Melyik módszer fogad egy fogyasztót (Consumer), majd hajtja azt végre a folyam minden elemére?</text>
        <correct>forEach</correct>
    </question>
    <question type="multi_choice">
        <text>Válassza ki az új folyamot eredményező folyamműveleteket.</text>
        <answer>filter</answer>
        <answer>collect</answer>
        <answer>anyMatch</answer>
        <answer>sorted</answer>
        <correct>0</correct>
        <correct>3</correct>
    </question>
    <question type="multi_choice">
        <text>Válassza ki azokat a folyamműveleteket, amelyek Optional objektumokat eredményeznek.</text>
        <answer>allMatch</answer>
        <answer>findFirst</answer>
        <answer>count</answer>
        <answer>collect</answer>
        <correct>1</correct>
    </question>
    <question type="multi_choice">
        <text>Válassza ki azokat az folyamműveleteket, amelyek egy feltételt (Predicate) fogadnak el paraméterként.</text>
        <answer>anyMatch</answer>
        <answer>map</answer>
        <answer>allMatch</answer>
        <answer>filter</answer>
        <correct>0</correct>
        <correct>2</correct>
        <correct>3</correct>
    </question>
    <question type="true_false">
        <text>A folyamműveleteket lambda kifejezésekkel fogadnak paraméterként.</text>
        <correct>true</correct>
    </question>
    <question type="single_choice">
        <text>Miért használhat lambda kifejezéseket folyamművelet paraméterekként?</text>
        <answer>Mert a paraméterek funkcionális interfészek.</answer>
        <answer>Mert a Stream egy nem módosítható osztály.</answer>
        <answer>Mert a paraméterek interfészek.</answer>
        <answer>Mert a folyamok a Java 8-ban kerültek bele.</answer>
        <correct>0</correct>
    </question>
    <question type="true_false">
        <text>Az előre definiált begyűjtők a Collectors osztályon belül találhatók.</text>
        <correct>true</correct>
    </question>
    <question type="true_false">
        <text>Az előre definiált begyűjtők a Collection osztályon belül találhatók.</text>
        <correct>false</correct>
    </question>

    <!-- Questions about additional Java 8 features -->
    <question type="text">
        <text>Melyik Java 8-ban hozzáadott osztály tud, de nem feltétlenül tartalmaz értéket?</text>
        <correct>Optional</correct>
        <correct>java.util.Optional</correct>
    </question>
    <question type="true_false">
        <text>Az Optional osztály bármilyen értéket tartalmazhat.</text>
        <correct>true</correct>
    </question>
    <question type="multi_choice">
        <text>Melyik igaz ezek közül egy Optional-ról?</text>
        <answer>Tarthat egy értéket.</answer>
        <answer>Tarthat több értéket.</answer>
        <answer>Lehet üres.</answer>
        <correct>0</correct>
        <correct>2</correct>
    </question>
    <question type="single_choice">
        <text>Mikor érdemes Optional-t használni?</text>
        <answer>Az osztály tagjaként.</answer>
        <answer>Metódusok visszatérési értékeként, amelyek nem mindig adnak vissza értéket.</answer>
        <answer>Ez elavult, és nem szabad használni.</answer>
        <correct>1</correct>
    </question>
    <question type="text">
        <text>Melyik statikus metódus használható egy értéket tároló Optional létrehozására?</text>
        <correct>of</correct>
        <correct>Optional.of</correct>
    </question>
    <question type="text">
        <text>Melyik statikus metódus használható egy érték nélküli Optional létrehozására?</text>
        <correct>empty</correct>
        <correct>Optional.empty</correct>
    </question>
    <question type="single_choice">
        <text>Mi történik, ha egy üres Optional-ból kivesszük a nem létező értéket?</text>
        <answer>Egy üres Optional-t kapunk vissza.</answer>
        <answer>Null értéket kapunk vissza.</answer>
        <answer>Egy kivételt dob.</answer>
        <correct>2</correct>
    </question>
    <question type="text">
        <text>Melyik szimbólumot használjuk a metódusra való hivatkozáshoz?</text>
        <correct>::</correct>
    </question>
    <question type="true_false">
        <text>Nem hozhatsz létre metódushivatkozást egy statikus metódusra.</text>
        <correct>false</correct>
    </question>
    <question type="true_false">
        <text>Paraméterek nélkül nem hozhatsz létre metódushivatkozást.</text>
        <correct>false</correct>
    </question>
    <question type="text">
        <text>Készíts metódushivatkozást az Integer osztály 'parseInt' metódusára.</text>
        <correct>Integer::parseInt</correct>
    </question>
    <question type="text">
        <text>Van egy 'obj' nevű objektumod. Készíts metódushivatkozást az objektum 'toString' metódusára.</text>
        <correct>obj::toString</correct>
    </question>

    <!--
        <question type="single_choice">
            <text></text>
            <answer></answer>
            <answer></answer>
            <answer></answer>
            <answer></answer>
            <correct></correct>
        </question>

        <question type="multi_choice">
            <text></text>
            <answer></answer>
            <answer></answer>
            <answer></answer>
            <answer></answer>
            <correct></correct>
            <correct></correct>
        </question>

        <question type="true_false">
            <text></text>
            <correct></correct>
        </question>

        <question type="text">
            <text></text>
            <correct></correct>
            <correct></correct>
        </question>
        -->
</resources>
