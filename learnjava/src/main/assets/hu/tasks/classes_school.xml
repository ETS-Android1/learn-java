<?xml version="1.0" encoding="utf-8" standalone="no"?>
<resources>
    <taskdata>
        <id>152</id>
        <name>Iskola rendszer</name>
    </taskdata>
    <text>
        <![CDATA[
        A feladatod, hogy létrehozd egy iskola "rendszerét". A fő entitások, amelyeknek szerepelniük kell 
		a következők:
        ]]>
    </text>
    <list>
        <![CDATA[
        <ul>
        <li>Person (személy): <b>névvel és életkorral</b> rendelkezik, az iskolában dolgozó vagy tanuló személyt képviseli.
        <li>Student (tanuló): rendelkezik egy <b>tantárgy listával</b>, minden tantárgynak saját <b>osztályzata</b> van.</li>
        <li>Subject (tantárgy): <b>névvel</b> és egy <b>tanárral</b> rendelkezik, aki tanítja.</li>
        <li>Teacher (tanár): lehet egy <b>osztálya</b>, amelynek ő az osztályfőnöke.</li>
        <li>SchoolClass (osztály): azonos korú tanulók csoportja.</li>
        </ul>
        ]]>
    </list>
    <boxed title="Egységbe zárás">
        <![CDATA[
        Rejts el minden információt <i>privát tagok</i>, getterek és setterek mögé! Tiltsd le a nem 
		módosítható információk megváltoztatását, például egy személy nevét <i>final</i>-al.
        ]]>
    </boxed>
    <text>
        <![CDATA[
        Minden entitáshoz létre kell hoznod egy-egy osztályt, de nyugodtan hozhatsz létre többet is. Ne feledd, 
		hogy az osztályoknak össze kell kapcsolódniuk, egymást tartalmazva (például egy <i>tanár</i>-nak 
		van egy <i>osztálya</i>) vagy örökléssel (a diákok és a tanárok is személyek).
        ]]>
    </text>
    <title text="Viselkedés metódusokkal"/>
    <text>
        <![CDATA[
        Implementálj viselkedést minden osztály számára megfelelő metódusokkal. Minden osztálynak 
		rendelkeznie kell legalább néhány olyan metódussal, amelyek valami értelmes dolgot csinálnak. 
		Íme néhány példa:
        ]]>
    </text>
    <list>
        <![CDATA[
        <ul>
        <li>Egy metódus, amely kiszámítja a tanuló átlagos osztályzatát.</li>
        <li>Egy metódus, amely felsorolja az összes tanárt, aki egy diákot tanít.</li>
        </ul>
        ]]>
    </list>
    <text>
        <![CDATA[
        Írj egy absztrakt metódust a <i>Person</i> osztály számára <i>printData</i> néven, és valósítsd 
		meg a diák és a tanár számára is.
        ]]>
    </text>
    <boxed title="Admin interfész">
        <![CDATA[
        Legyen egy <i>Admin</i> interfész, amelynek metódusai módosíthatják egy osztály tanulólistáját.
        A <i>Teacher</i> valósítsa meg ezt az interfészt, de egy korlátozással:
        <p>
        Egy tanár csak a saját osztályának diákjait változtathatja meg!
        ]]>
    </boxed>
    <boxed title="Kivétel kezelés">
        <![CDATA[
        Ne engedélyezd az érvénytelen objektumok létrehozását! Győződj meg például arról, hogy egy 
		adott életkor érvényes. Kivételek dobódjanak ha valami nem stimmel 
		(használhatod a <i>JDK</i> megfelelő kivételét, például <i>IllegalArgumentException</i>-t).
        ]]>
    </boxed>
    <advanced title="Párok">
        <![CDATA[
        A tanulónak tantárgy-osztályzat párokkal kell rendelkeznie. Rajtad áll, hogy ezt hogyan valósítod meg. 
		Az előző feladatban az ajánlás egy <b>szótár</b> (<i>map</i>) használata volt.
        <p>
        Egy másik megközelítéshez létrehozhatsz egy egyszerű osztályt, amely egy tantárgyat és az osztályzatot tárolja. 
		Ezután ebből az osztályból egy listát hozhatsz létre.
        ]]>
    </advanced>
    <title text="Javadoc"/>
    <text>
        <![CDATA[
        A <a href="https://www.tutorialspoint.com/java/java_documentation.htm">javadoc</a> az ajánlott módszer a 
		metódusok és osztályok dokumentálására! Próbáld ki ebben a projektben!
        Vagy ne tedd, de írj legalább néhány kommentet.
        ]]>
    </text>
    <title text="Teszt"/>
    <text>
        <![CDATA[
        Legyen az egyik osztályban <i>main</i> metódus. Teszteld a projektet néhány objektum 
		létrehozásával a <i>main</i>-ben.
        ]]>
    </text>
    <solution>
        <text>
            <![CDATA[
            Egy lehetséges megoldás, javadoc kommentzéssel együtt. Először is, a <i>Person</i> 
			absztrakt ősosztály:
            ]]>
        </text>
        <code><![CDATA[
            
<font color="#E65100">package</font> taskschool;
<br/>
<br/><font color="gray">/**
<br/> * Egy személyt reprezentál, aki lehet tanár vagy diák.
<br/> * @see Student
<br/> * @see Teacher
<br/> */</font>
<br/><font color="#E65100">public abstract class</font> <font color="#999900">Person</font> {
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">protected final</font> <font color="#999900">String</font> name;
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** Kor, aminek pozitívnak kell lennie. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">protected</font> <font color="#DF7401">int</font> age;
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Létrehoz egy személy objektumot. A leszármazott osztályok hívják.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @throws IllegalArgumentException Ha a kor nem pozitív.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">Person</font>(<font color="#999900">String</font> name, <font color="#DF7401">int</font> age) <font color="#E65100">throws</font> <font color="#999900">IllegalArgumentException</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">name</font> = name;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(age &lt;= <font color="#F0E130">0</font>) <font color="#E65100">throw new</font> <font color="#999900">IllegalArgumentException</font>(<font color="#2E8B57">"A kornak pozitívnak kell lennie"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">age</font> = age;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** Információt ír ki a személyről */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public abstract</font> <font color="#DF7401">void</font> <font color="#ADD8E6">printData</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">// ----------- Getterek és setterek. -----------------------</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">int</font> <font color="#ADD8E6">getAge</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> age;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">void</font> <font color="#ADD8E6">setAge</font>(<font color="#DF7401">int</font> age) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">age</font> = age;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">String</font> <font color="#ADD8E6">getName</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> name;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
            
        ]]></code>
        <text>
            <![CDATA[
            Az adminisztrátor interfész:
            ]]>
        </text>
        <code><![CDATA[
            
<font color="#E65100">package</font> taskschool;
<br/>
<br/><font color="gray">/** Az admin interfész. */</font>
<br/><font color="#E65100">public interface</font> <font color="#999900">Administrator</font> {
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** Hozzáad egy diákot az osztályhoz. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">void</font> <font color="#ADD8E6">addStudent</font>(<font color="#999900">SchoolClass</font> schoolClass, <font color="#999900">Student</font> student) <font color="#E65100">throws</font> <font color="#999900">SecurityException</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** Eltávolít egy diákot az osztályból. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">void</font> <font color="#ADD8E6">removeStudent</font>(<font color="#999900">SchoolClass</font> schoolClass, <font color="#999900">Student</font> student) <font color="#E65100">throws</font> <font color="#999900">SecurityException</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>}
<br/>
            
        ]]></code>
        <text>
            <![CDATA[
            A tanár (<i>Teacher</i>), aki az <i>Admin</i> interfészt valósítja meg, és a 
			<i>Person</i> osztályból származik:
            ]]>
        </text>
        <code><![CDATA[
            
<font color="#E65100">package</font> taskschool;
<br/>
<br/><font color="gray">/**
<br/> * A tanár osztálya aki persze személy, és admin jogokkal rendelkezik. Iskolai osztálya is lehet.
<br/> * @see Administrator
<br/> */</font>
<br/><font color="#E65100">public class</font> <font color="#999900">Teacher</font> <font color="#E65100">extends</font> <font color="#999900">Person</font> <font color="#E65100">implements</font> <font color="#999900">Administrator</font> {
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** A tanár iskolai osztálya. Ha null, akkor nincsen neki. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private</font> <font color="#999900">SchoolClass</font> classOfTeacher;
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Konstruktor.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @throws IllegalArgumentException Ha a kor nem pozitív.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">Teacher</font>(<font color="#999900">String</font> name, <font color="#DF7401">int</font> age, <font color="#999900">SchoolClass</font> classOfTeacher) <font color="#E65100">throws</font> <font color="#999900">IllegalArgumentException</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">super</font>(name, age);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">classOfTeacher</font> = classOfTeacher;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Iskolai osztály nélkül hoz létre egy tanárt. Az osztályt később hozzá lehet adni.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @throws IllegalArgumentException Ha a kor nem pozitív.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">Teacher</font>(<font color="#999900">String</font> name, <font color="#DF7401">int</font> age) <font color="#E65100">throws</font> <font color="#999900">IllegalArgumentException</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">super</font>(name, age);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">classOfTeacher</font> = null;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Admin megvalósítás: diák osztályhoz adása.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @throws SecurityException Ha az osztály nem a tanáré.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="red">@Override</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">void</font> <font color="#ADD8E6">addStudent</font>(<font color="#999900">SchoolClass</font> schoolClass, <font color="#999900">Student</font> student) <font color="#E65100">throws</font> <font color="#999900">SecurityException</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(!schoolClass.<font color="#ADD8E6">equals</font>(classOfTeacher)) <font color="#E65100">throw new</font> <font color="#999900">SecurityException</font>(<font color="#2E8B57"><font color="#2E8B57">"Nem jó osztály!"</font></font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(!schoolClass.<font color="#ADD8E6">getStudentList</font>().<font color="#ADD8E6">contains</font>(student)) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;schoolClass.<font color="#ADD8E6">getStudentList</font>().<font color="#ADD8E6">add</font>(student);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Admin megvalósítás: diák eltávolítása.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @throws SecurityException Ha az osztály nem a tanáré.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="red">@Override</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">void</font> <font color="#ADD8E6">removeStudent</font>(<font color="#999900">SchoolClass</font> schoolClass, <font color="#999900">Student</font> student) <font color="#E65100">throws</font> <font color="#999900">SecurityException</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(!schoolClass.<font color="#ADD8E6">equals</font>(classOfTeacher)) <font color="#E65100">throw new</font> <font color="#999900">SecurityException</font>(<font color="#2E8B57"><font color="#2E8B57">"Nem jó osztály!"</font></font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;schoolClass.<font color="#ADD8E6">getStudentList</font>().<font color="#ADD8E6">remove</font>(student);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** Információt ír ki a tanárról és osztályáról, ha van neki. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="red">@Override</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">void</font> <font color="#ADD8E6">printData</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"Név: "</font> + name);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"Kor: "</font> + age);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(<font color="#ADD8E6">hasClass</font>()) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"Osztály mérete: "</font> +
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;classOfTeacher.<font color="#ADD8E6">classSize</font>() + <font color="#2E8B57">" átlag jegy:  "</font> + classOfTeacher.<font color="#ADD8E6">classAverage</font>());
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;} <font color="#E65100">else</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"Nincs osztály."</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** Ellenőrzi, hogy van-e iskolai osztálya a tanárnak. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">boolean</font> <font color="#ADD8E6">hasClass</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> classOfTeacher != null;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">SchoolClass</font> <font color="#ADD8E6">getClassOfTeacher</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> classOfTeacher;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">void</font> <font color="#ADD8E6">setClassOfTeacher</font>(<font color="#999900">SchoolClass</font> classOfTeacher) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">classOfTeacher</font> = classOfTeacher;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
<br/>
            
        ]]></code>
        <text>
            <![CDATA[
            A diák (<i>Student</i>). A tantárgy-osztály párosítások egy segédosztállyal valósulnak meg. Itt most ezt a 
			<i>Student</i>-en belülre írtam, de az is tökéletes, ha saját forrásájlt kap.
            ]]>
        </text>
        <code><![CDATA[
            
<font color="#E65100">package</font> taskschool;
<br/>
<br/><font color="#E65100">import</font> java.<font color="#ADD8E6">util</font>.<font color="#999900">List</font>;
<br/>
<br/><font color="gray">/**
<br/> * Egy diák osztálya, aki személy is. Nem adminisztrátor.
<br/> */</font>
<br/><font color="#E65100">public class</font> <font color="#999900">Student</font> <font color="#E65100">extends</font> <font color="#999900">Person</font> {
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * A tantárgyak és jegyeik listája (a pár segéd osztályt használja).
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @see Pair
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @see Subject
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private</font> <font color="#999900">List</font>&lt;<font color="#999900">Pair</font>> subjects;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Konstruktor.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @param subjects Jegyek listája.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @throws IllegalArgumentException Ha a kor nem pozitív, vagy üres a jegylista.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">Student</font>(<font color="#999900">String</font> name, <font color="#DF7401">int</font> age, <font color="#999900">List</font>&lt;<font color="#999900">Pair</font>> subjects) <font color="#E65100">throws</font> <font color="#999900">IllegalArgumentException</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">super</font>(name, age);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(subjects.<font color="#ADD8E6">isEmpty</font>()) <font color="#E65100">throw new</font> <font color="#999900">IllegalArgumentException</font>(<font color="#2E8B57">"Nincsenek jegyek!"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">subjects</font> = subjects;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** Információt ír ki a diákról. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="red">@Override</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">void</font> <font color="#ADD8E6">printData</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"Név: "</font> + name);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"Kor: "</font> + age);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"Tantárgyak és jegyek listája:"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">for</font>(<font color="#999900">Pair</font> pair: subjects) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"Tárgy: "</font> + pair.subject.getName() + <font color="#2E8B57">", jegy: "</font> + pair.<font color="#ADD8E6">grade</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Kiszámolja a diak átlagát.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @return Az átlag.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">double</font> <font color="#ADD8E6">averageGrade</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">double</font> avg = <font color="#F0E130">0</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">for</font>(<font color="#999900">Pair</font> pair: subjects) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;avg += pair.<font color="#ADD8E6">grade</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> avg / subjects.<font color="#ADD8E6">size</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** Név és kor alapján egyenlőséget néz két diák közt. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="red">@Override</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">boolean</font> <font color="#ADD8E6">equals</font>(<font color="#999900">Object</font> obj) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(this == obj) <font color="#E65100">return true</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(obj == null) <font color="#E65100">return false</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(obj <font color="#E65100">instanceof</font> <font color="#999900">Student</font>) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">Student</font> s = (<font color="#999900">Student</font>)obj; <font color="gray">//biztonságos
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> s.<font color="#ADD8E6">age</font> == age && s.<font color="#ADD8E6">name</font>.<font color="#ADD8E6">equals</font>(name);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return false</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Segédosztály a a tantárgy-jegy pároknak.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @see Student
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">static class</font> <font color="#999900">Pair</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private</font> <font color="#999900">Subject</font> subject;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private</font> <font color="#DF7401">int</font> grade;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">Pair</font>(<font color="#999900">Subject</font> subject, <font color="#DF7401">int</font> grade) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">subject</font> = subject;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">grade</font> = grade;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
<br/>
            
        ]]></code>
        <text>
            <![CDATA[
            A tantárgy (<i>Subject<i>) osztálya:
            ]]>
        </text>
        <code><![CDATA[
            
<font color="#E65100">package</font> taskschool;
<br/>
<br/><font color="gray">/** Egy tantárgyat reprezentál. */</font>
<br/><font color="#E65100">public class</font> <font color="#999900">Subject</font> {
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private final</font> <font color="#999900">String</font> name;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** A felelős tanár, aki tanítja. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private</font> <font color="#999900">Teacher</font> teacher;
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">Subject</font>(<font color="#999900">String</font> name, <font color="#999900">Teacher</font> teacher) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">name</font> = name;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">teacher</font> = teacher;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">// ------------- Getterek és setterek. --------------
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">Teacher</font> <font color="#ADD8E6">getTeacher</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> teacher;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">void</font> <font color="#ADD8E6">setTeacher</font>(<font color="#999900">Teacher</font> teacher) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">teacher</font> = teacher;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">String</font> <font color="#ADD8E6">getName</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> name;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
<br/>
            
        ]]></code>
        <text>
            <![CDATA[
            És a diákok csoportja (iskolai osztály), az úgynevezett <i>SchoolClass</i>. Nem jó ötlet csak simán <i>Class</i>-nak
			nevezni, mivel a <i>JDK</i>-ban már van egy ilyen nevű osztály.
            ]]>
        </text>
        <code><![CDATA[
            
<font color="#E65100">package</font> taskschool;
<br/>
<br/><font color="#E65100">import</font> java.<font color="#ADD8E6">util</font>.<font color="#999900">ArrayList</font>;
<br/><font color="#E65100">import</font> java.<font color="#ADD8E6">util</font>.<font color="#999900">List</font>;
<br/>
<br/><font color="gray">/**
<br/> * Egy iskolai osztályt reprezentál. A diákoknak azonos korúnak kell lennie.
<br/> * @see Student.
<br/> */</font>
<br/><font color="#E65100">public class</font> <font color="#999900">SchoolClass</font> {
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private</font> <font color="#999900">List</font>&lt;<font color="#999900">Student</font>> students;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Diák listából létrehoz egy osztályt.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @param students A lista.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @throws IllegalArgumentException Ha a lista üres, vagy a diákok kora eltérő.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">SchoolClass</font>(<font color="#999900">List</font>&lt;<font color="#999900">Student</font>> students) <font color="#E65100">throws</font> <font color="#999900">IllegalArgumentException</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(students.<font color="#ADD8E6">isEmpty</font>()) <font color="#E65100">throw new</font> <font color="#999900">IllegalArgumentException</font>(<font color="#2E8B57">"Nincsenek diákok"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">int</font> firstAge = students.<font color="#ADD8E6">get</font>(<font color="#F0E130">0</font>).<font color="#ADD8E6">getAge</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">for</font>(<font color="#999900">Student</font> student: students) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(student.<font color="#ADD8E6">getAge</font>() != firstAge) <font color="#E65100">throw new</font> <font color="#999900">IllegalArgumentException</font>(<font color="#2E8B57">"Különböző korú diákok"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//egy új lista létrehozása, hogy biztosan módosítható legyen
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">students</font> = <font color="#E65100">new</font> <font color="#999900">ArrayList&lt;></font>(students);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Kiszámolja az osztály átlagot, felhasználva a diákok {@link Student#averageGrade()} metódusát.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @return Az osztály átlag.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">double</font> <font color="#ADD8E6">classAverage</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">double</font> avg = <font color="#F0E130">0</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">for</font>(<font color="#999900">Student</font> student: students) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;avg += student.<font color="#ADD8E6">averageGrade</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> avg / <font color="#ADD8E6">classSize</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** @return Az osztály mérete. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">int</font> <font color="#ADD8E6">classSize</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> students.<font color="#ADD8E6">size</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** @return A diákok módosítható listája. Az {@link Administrator}-ok módosíthatják. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">protected</font> <font color="#999900">List</font>&lt;<font color="#999900">Student</font>> <font color="#ADD8E6">getStudentList</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> students;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="red">@Override</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">boolean</font> <font color="#ADD8E6">equals</font>(<font color="#999900">Object</font> obj) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font> (<font color="#E65100">this</font> == obj) <font color="#E65100">return true</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font> (obj == null) <font color="#E65100">return false</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(obj <font color="#E65100">instanceof</font> <font color="#999900">SchoolClass</font>) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">SchoolClass</font> sc = (<font color="#999900">SchoolClass</font>)obj;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> students.<font color="#ADD8E6">equals</font>(sc.<font color="#ADD8E6">students</font>); <font color="gray">//list have implemented equals
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return false</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
            
        ]]></code>
        <text>
            <![CDATA[
            Most, hogy megvan az összes osztály, futtassunk le néhány tesztet:
            ]]>
        </text>
        <code><![CDATA[
            
<font color="#E65100">public static</font> <font color="#DF7401">void</font> <font color="#ADD8E6">main</font>(<font color="#999900">String</font>[] args) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//tanárok létrehozása, egyenlőre osztályok nélkül</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">Teacher</font> mathTeacher = <font color="#E65100">new</font> <font color="#999900">Teacher</font>(<font color="#2E8B57">"Mr. Jani"</font>, <font color="#F0E130">32</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">Teacher</font> geoTeacher = <font color="#E65100">new</font> <font color="#999900">Teacher</font>(<font color="#2E8B57">"Mrs. Juli"</font>, <font color="#F0E130">41</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//tantárgyak létrehozása</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">Subject</font> math = <font color="#E65100">new</font> <font color="#999900">Subject</font>(<font color="#2E8B57">"Matematika"</font>, mathTeacher);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">Subject</font> geology = <font color="#E65100">new</font> <font color="#999900">Subject</font>(<font color="#2E8B57">"Földrajz"</font>, geoTeacher);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//diákok létrehozása (és osztály), most ezt a 2 tantárgyat tanulják</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">List&lt;Pair></font> pairs = <font color="#E65100">new</font> <font color="#999900">ArrayList&lt;></font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;pairs.<font color="#ADD8E6">add</font>(<font color="#E65100">new</font> <font color="#999900">Pair</font>(math, <font color="#F0E130">4</font>)); <font color="gray">//4-es</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;pairs.<font color="#ADD8E6">add</font>(<font color="#E65100">new</font> <font color="#999900">Pair</font>(geology, <font color="#F0E130">3</font>)); <font color="gray">//3-as</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">Student</font> stud1 = <font color="#E65100">new</font> <font color="#999900">Student</font>(<font color="#2E8B57">"Tomi"</font>, <font color="#F0E130">15</font>, pairs);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">Student</font> stud2 = <font color="#E65100">new</font> <font color="#999900">Student</font>(<font color="#2E8B57">"Pali"</font>, <font color="#F0E130">15</font>, pairs); <font color="gray">//azonosak a jegyeik</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">SchoolClass</font> class1 = <font color="#E65100">new</font> <font color="#999900">SchoolClass</font>(<font color="#999900">Arrays</font>.<font color="#ADD8E6">asList</font>(stud1, stud2)); <font color="gray">//gyors listakészítés</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;mathTeacher.<font color="#ADD8E6">setClassOfTeacher</font>(class1); <font color="gray">//ezt az osztályt a matek tanár kapja
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;mathTeacher.<font color="#ADD8E6">printData</font>(); <font color="gray">//infó a tanárról</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">try</font> { <font color="gray">//ha a másik tanárral módosítjuk ezt az osztályt, hibát kapunk
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;geoTeacher.<font color="#ADD8E6">removeStudent</font>(class1, stud1);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;} <font color="#E65100">catch</font>(<font color="#999900">SecurityException</font> se) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">err</font>.<font color="#ADD8E6">println</font>(geoTeacher.<font color="#ADD8E6">getName</font>() + <font color="#2E8B57">" hozzáférése megtagadva!"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;mathTeacher.<font color="#ADD8E6">removeStudent</font>(class1, stud1); <font color="gray">//az osztály tanára tud módosítani</font>
<br/>}
            
        ]]></code>
    </solution>
</resources>
