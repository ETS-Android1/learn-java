<?xml version="1.0" encoding="utf-8" standalone="no"?>
<resources>
    <taskdata>
        <id>302</id>
        <name>Javított adatstruktúrák</name>
    </taskdata>
    <boxed title="Függőség">
        <![CDATA[
        Ez a feladat feltételezi, hogy az előző, generikus adatszerkezetekről szóló feladatot már elvégezted.
        ]]>
    </boxed>
    <title text="Átalakítás"/>
    <text>
        <![CDATA[
        A feladat első lépése az adatszerkezetek átalakítása úgy, hogy legyen egy közös alaposztály, a <i>MyCollection</i>. 
		Ez az osztály szintén legyen generikus.
        ]]>
    </text>
    <boxed title="MyCollection részletek">
        <![CDATA[
        Az alaposztálynak metódusokat kell biztosítania a kollekciók elemei felett történő iterációhoz. Ez történhet
        az aktuális elemre való hivatkozás fenntartásával, vagy az aktuális index tárolásával.
        <br><br>
        Az alaposztály rendelkezzen továbbá absztrakt <i>add</i> és <i>remove</i> metódusokkal, ezeket majd a leszármazott 
		kollekciókban kell megvalósítani.
        ]]>
    </boxed>
    <text>
        <![CDATA[
        A <i>JDK</i> rendelkezik iterálásra szolgáló interfészekkel, amelyek a <b>java.util.Iterator</b> és a 
		<b>java.lang.Iterable</b> nevet viselik. Ezeknek vannak más, nehezen implementálható részeik is. 
		A mi céljainkhoz elég egy egyszerű, saját iterátor.
        ]]>
    </text>
    <boxed title="Az iterátor implementációja">
        <![CDATA[
		Kell egy <i>next</i> metódus, ami a következő elemre lép. 
        Amikor a <i>next</i> metódus meghívásra kerül, de már nincs több elem, egy <i>NoSNoSuchElementException</i> 
		kivételt kell dobni. Legyen továbbá egy <i>hasNext</i> metódus, amely meg tudja mondani, hogy van-e még több 
		elem vagy nincs, és egy metódus, amely visszaállítja a iterátort az elejére.
        ]]>
    </boxed>
    <text>
        <![CDATA[
		Ezek az alaposztályban legyenek megvalósítva (<i>MyCollection</i>), de szükség esetén felülírhatjuk 
		őket a kollekciókban).
        Azért van szükségünk erre az iterátor funkcióra, hogy a most következő segédosztály létrehozható legyen.
        ]]>
    </text>
    <title text="Segédosztály"/>
    <text>
        <![CDATA[
        Hozz létre egy absztrakt osztályt, amely generikus metódusokkal rendelkezik. A következő metódusokra van szükség:
        ]]>
    </text>
    <list>
        <![CDATA[
        <ul>
        <li>Adatstruktúra kiíratása (bármilyen típusú elemek esetén).</li>
        <li>Egy adatszerkezet eleminek összegzése (csak <i>Number</i>-ből származó elemek esetén).</li>
        <li>Minimum és maximum kereső metódusok (csak <i>Comparable</i> elemek esetén).</li>
        </ul>
        ]]>
    </list>
    <solution>
        <text>
            <![CDATA[
            Az absztrakt ősosztály, amiből a többi kollekció származik:
            ]]>
        </text>
        <code><![CDATA[
            
<font color="#E65100">public</font> <font color="#E65100">abstract</font> <font color="#E65100">class</font> <font color="#999900">MyCollection</font>&lt;<font color="#999900">T</font>> {
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//used by the iteration
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">protected</font> <font color="#DF7401">int</font> currentIndex;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//the iterator method
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#E65100">abstract</font> <font color="#999900">T</font> <font color="#ADD8E6">next</font>() <font color="#E65100">throws</font> <font color="#999900">NoSuchElementException</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//helper method which can detect if we're at the end
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">boolean</font> <font color="#ADD8E6">hasNext</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(currentIndex == <font color="#ADD8E6">size</font>()) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> false;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> true;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">void</font> <font color="#ADD8E6">resetIterator</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;currentIndex = <font color="#F0E130">0</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#E65100">abstract</font> <font color="#DF7401">void</font> <font color="#ADD8E6">add</font>(<font color="#999900">T</font> element);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#E65100">abstract</font> <font color="#999900">T</font> <font color="#ADD8E6">remove</font>(<font color="#999900">T</font> element);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#E65100">abstract</font> <font color="#DF7401">int</font> <font color="#ADD8E6">size</font>();
<br/>}
            
        ]]></code>
        <text>
            <![CDATA[
            Íme az saját tömblista osztály, ami már fentiből származik. Csak az új <i>next</i> metódust mutatom be. 
			Az összes többi metódus ugyanaz mint a fenti osztályban és az előző feladatban.
            ]]>
        </text>
        <code><![CDATA[
            
<font color="#E65100">public</font> <font color="#E65100">class</font> <font color="#999900">MyArrayList</font>&lt;<font color="#999900">T</font>> <font color="#E65100">extends</font> <font color="#999900">MyCollection</font>&lt;<font color="#999900">T</font>> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/*
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;Other methods and members are the same as in the previous task.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;*/</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="red">@Override</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">T</font> <font color="#ADD8E6">next</font>() <font color="#E65100">throws</font> <font color="#999900">NoSuchElementException</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//check if we can get next
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(!<font color="#ADD8E6">hasNext</font>()) <font color="#E65100">throw</font> <font color="#E65100">new</font> <font color="#999900">NoSuchElementException</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//next element exists
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> <font color="#ADD8E6">get</font>(currentIndex++);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
            
        ]]></code>
        <text>
            <![CDATA[
            A <i>MyLinkedList</i> pontosan ugyanazt a <i>next</i> metódust kapja. Ehelyett nézzük meg a 
			továbbfejlesztett veremet:
            ]]>
        </text>
        <code><![CDATA[
            
<font color="#E65100">public</font> <font color="#E65100">class</font> <font color="#999900">MyStack</font>&lt;<font color="#999900">T</font>> <font color="#E65100">extends</font> <font color="#999900">MyCollection</font>&lt;<font color="#999900">T</font>> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/*
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;A többi metódus változatlan.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;*/</font>
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="red">@Override</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">T</font> <font color="#ADD8E6">next</font>() <font color="#E65100">throws</font> <font color="#999900">NoSuchElementException</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//check if we can get next
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(!<font color="#ADD8E6">hasNext</font>()) <font color="#E65100">throw</font> <font color="#E65100">new</font> <font color="#999900">NoSuchElementException</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//next element exists
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> list.<font color="#ADD8E6">get</font>(currentIndex++);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="red">@Override</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">void</font> <font color="#ADD8E6">add</font>(<font color="#999900">T</font> element) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ADD8E6">push</font>(element);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="red">@Override</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">T</font> <font color="#ADD8E6">remove</font>(<font color="#999900">T</font> element) <font color="#E65100">throws</font> <font color="#999900">UnsupportedOperationException</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//we don't allow removing by element with a stack
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">throw</font> <font color="#E65100">new</font> <font color="#999900">UnsupportedOperationException</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
            
        ]]></code>
        <text>
            <![CDATA[
            Most, hogy megvannak a továbbfejlesztett adatszerkezetek, megírhatjuk a segédosztályt:
            ]]>
        </text>
        <code><![CDATA[
            
<font color="#E65100">public</font> <font color="#E65100">abstract</font> <font color="#E65100">class</font> <font color="#999900">MyUtils</font> {
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//kiírató metódus
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#E65100">static</font> <font color="#DF7401">void</font> <font color="#ADD8E6">printCollection</font>(<font color="#999900">MyCollection</font>&lt;?> collection) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;collection.<font color="#ADD8E6">resetIterator</font>(); <font color="gray">//must be done!
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">while</font>(collection.<font color="#ADD8E6">hasNext</font>()) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(collection.<font color="#ADD8E6">next</font>().<font color="#ADD8E6">toString</font>());
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//összegző metódus, csak szám típusokra
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#E65100">static</font> <font color="#DF7401">double</font> <font color="#ADD8E6">sumCollection</font>(<font color="#999900">MyCollection</font>&lt;? <font color="#E65100">extends</font> <font color="#999900">Number</font>> collection) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;collection.<font color="#ADD8E6">resetIterator</font>(); <font color="gray">//must be done!
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">double</font> sum = <font color="#F0E130">0</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">while</font>(collection.<font color="#ADD8E6">hasNext</font>()) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;sum += collection.<font color="#ADD8E6">next</font>().<font color="#ADD8E6">doubleValue</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> sum;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//maximumkereső, csak Comparable típusokra
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#E65100">static</font> &lt;<font color="#999900">T</font> <font color="#E65100">extends</font> <font color="#999900">Comparable</font>&lt;<font color="#999900">T</font>>> <font color="#999900">T</font> <font color="#ADD8E6">maximum</font>(<font color="#999900">MyCollection</font>&lt;<font color="#999900">T</font>> collection) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;collection.<font color="#ADD8E6">resetIterator</font>(); <font color="gray">//must be done!
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">T</font> max = collection.<font color="#ADD8E6">next</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">while</font>(collection.<font color="#ADD8E6">hasNext</font>()) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">T</font> element = collection.<font color="#ADD8E6">next</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">int</font> compare = element.<font color="#ADD8E6">compareTo</font>(max);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(compare >= <font color="#F0E130">1</font>) { <font color="gray">//we found a new max
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;max = element;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> max;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//minimumkereső, csak Comparable típusokra
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#E65100">static</font> &lt;<font color="#999900">T</font> <font color="#E65100">extends</font> <font color="#999900">Comparable</font>&lt;<font color="#999900">T</font>>> <font color="#999900">T</font> <font color="#ADD8E6">minimum</font>(<font color="#999900">MyCollection</font>&lt;<font color="#999900">T</font>> collection) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;collection.<font color="#ADD8E6">resetIterator</font>(); <font color="gray">//must be done!
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">T</font> min = collection.<font color="#ADD8E6">next</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">while</font>(collection.<font color="#ADD8E6">hasNext</font>()) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">T</font> element = collection.<font color="#ADD8E6">next</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">int</font> compare = element.<font color="#ADD8E6">compareTo</font>(min);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(compare &lt;= <font color="#F0E130">-1</font>) { <font color="gray">//we found a new min
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;min = element;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> min;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
            
        ]]></code>
        <text>
            <![CDATA[
            Amint láthatjuk, az alaposztály által biztosított iterátor funkció tette lehetővé számunkra, 
			hogy elvégezzük a ezeket a műveleteket.
            ]]>
        </text>
    </solution>
</resources>
