<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!-- Task of course 'The basics' --><resources>
    <taskdata>
        <id>51</id>
        <name>Aritmetikai metódusok írása</name>
    </taskdata>
        <text>
            <![CDATA[
            A metódusokkal kapcsolatos fejezetben szerepel az <i>add</i> nevű metódus, ami két egész szám
            összeadását végzi, majd visszaadja az eredményt. A feladatod az lesz, hogy hasonló
            metódusokat írj kivonásra, szorzásra és osztásra.
            ]]>
        </text>
        <code><![CDATA[
            
<font color="#E65100">static</font> <font color="#DF7401">int</font> <font color="#ADD8E6">add</font>(<font color="#DF7401">int </font>n1,<font color="#DF7401"> int </font>n2) {
<br/><font color="#DF7401">	&nbsp;&nbsp;&nbsp;&nbsp;int </font>additionResult = n1 + n2;
<br/><font color="#E65100">	&nbsp;&nbsp;&nbsp;&nbsp;return </font>additionResult;
<br/>}
        
        ]]></code>
        <text>
            <![CDATA[
            Írd a metódusokat egy forrás fájlba, ahol ott van a főmetódus is, mivel abban kell majd
            meghívni, kipróbálni az eredményt. Ehhez használhatod az alapcsomagot, vagy készíthetsz
            saját csomagot.
            ]]>
        </text>
        <text>
            <![CDATA[
            <u>Ezeket a metódusokat kell elkészítened:</u>
            ]]>
        </text>
        <list>
            <![CDATA[
            <ul>
            <li> 1. Kivonás: két egész számot kap, majd visszaadja a <b>különbséget</b>: (x - y).</li>
            <li> 2. Szorzás: két egész számot kap, majd visszaadja a <b>szorzatukat</b>: (x * y).</li>
            <li> 3. Osztás: két egész számot kap, majd visszaadja a <b>hányadosukat</b>: (x - y).</li>
            <li> 4. Egy metódus ami <b>3 egész számot kap paraméterben</b>, ezeket összeadja, és az eredményt a konzolra írja.</li>
            </ul>
            ]]>
        </list>
        <advanced title="Nullával osztás">
            <![CDATA[
            A legbiztonságosabb és elegánsabb módja az osztást végző metódusnak, ha <b>kivétel kezelést</b>
            alkalmazol. Erről azonban csak egy későbbi kurzusban lesz szó, ezért nem kell foglalkoznod vele.
            <br><br>
            Ha azonban mégis szeretnéd kipróbálni már most, akkor <a href="https://www.javatpoint.com/exception-handling-in-java">ezen</a> a
            linken minden szükséges információt megtalálsz.
            ]]>
        </advanced>
        <advanced title="Az osztás eredménye">
            <![CDATA[
            Amikor majd teszteled az osztó metódusodat, furcsa eredményt láthatsz. Ennek az oka, hogy a
            Java egész számokon <b>egészosztást</b> for végezni, ami azt jelenti, hogy az eredmény törtrészét
            el fogja dobni. Például <i>3 / 2</i> eredménye <i>1</i> lesz, mivel a pontos <i>1.5</i>
            eredményből a <i>0.5</i> törtrész el lesz dobva.
            ]]>
        </advanced>
        <text>
            <![CDATA[
            Miután a metódusok elkészültek, hívd meg az első hármat a főmetódusban, mindegyik eredményét
            add értékül 1-1 változónak.
            <br><br>
            Tetszőleges számokat átadhatsz paraméterként, akár negatívakat is. Ha még a kivétel kezelléssel
            is foglalkoztál, nézd meg mi történik, ha 0-val próbálsz osztani!
            <br><br>
            Végül hívd meg a negyedik, utolsó metódust. Paraméterként kapja meg azokat a
            változókat, amiknek az első három metódus adott értéket.
            ]]>
        </text>
        <title text="Kövesd a szokásokat"/>
        <text>
            <![CDATA[
            Amikor ezt a feladatot csinálod, nevezd ez az osztályt, csomagot (ha készítettél sajátot),
            változókat és metódusokat az ajánlott módon.
            <br><br>
            <b>Kommenteld a kódot</b>. Minden metódushoz írj legalább valamennyi kommentet, amik
            megmagyarázzák, hogy mi is történik ott.
            ]]>
        </text>
        <boxed title="Nem csak ebben a feladatban">
            <![CDATA[
            A következő feladatokban ez már nem lesz kiírva, de mindig jó ötlet az elnevezési
            szabályokat és a kommentelést betartani.
            ]]>
        </boxed>

        <solution>
            <text>
                <![CDATA[
                Egyetlen forrás fájlra volt szükség. Én ezt a <i>task</i> csomagba helyeztem. Egy
                lehetséges megoldás itt látható:
                ]]>
            </text>
            <code><![CDATA[
                
<font color="#E65100">package</font> task;
<br/>
<br/><font color="#E65100">public class</font> <font color="#999900">Main</font> {
<br/>
<br/><font color="#E65100">	&nbsp;&nbsp;&nbsp;&nbsp;public static</font><font color="#DF7401"> void </font><font color="#ADD8E6">main</font>(<font color="#999900">String</font>[] args) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//call the first 3 methods
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">	&nbsp;&nbsp;&nbsp;&nbsp;int </font>subRes = <font color="#ADD8E6">subtract</font>(<font color="#F0E130">-2145</font>, <font color="#F0E130">45231</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">	&nbsp;&nbsp;&nbsp;&nbsp;int </font>mulRes = <font color="#ADD8E6">multiply</font>(<font color="#F0E130">31</font>, <font color="#F0E130">-8713</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">	&nbsp;&nbsp;&nbsp;&nbsp;int </font>divRes = <font color="#ADD8E6">divide</font>(<font color="#F0E130">16</font>, <font color="#F0E130">4</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//call the add and print method
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ADD8E6">addAndPrint</font>(subRes, mulRes, divRes);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">// Subtracts the second parameter from the first one and returns the result.
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">static</font> <font color="#DF7401">int</font> <font color="#ADD8E6">subtract</font>(<font color="#DF7401">int </font>n1,<font color="#DF7401"> int </font>n2) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">	&nbsp;&nbsp;&nbsp;&nbsp;return </font>n1 - n2;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">// Multiplies the parameters and returns the result.
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">static</font><font color="#DF7401"> int </font><font color="#ADD8E6">multiply</font>(<font color="#DF7401">int </font>n1,<font color="#DF7401"> int </font>n2) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">	&nbsp;&nbsp;&nbsp;&nbsp;return </font>n1 * n2;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">// Divides the parameters and returns the result.
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">static</font><font color="#DF7401"> int </font><font color="#ADD8E6">divide</font>(<font color="#DF7401">int </font>n1,<font color="#DF7401"> int </font>n2) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">	&nbsp;&nbsp;&nbsp;&nbsp;return </font>n1 / n2;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">// Sums the parameters and prints the result.
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">static</font><font color="#DF7401"> void </font><font color="#ADD8E6">addAndPrint</font>(<font color="#DF7401">int </font>n1,<font color="#DF7401"> int </font>n2,<font color="#DF7401"> int </font>n3) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">	&nbsp;&nbsp;&nbsp;&nbsp;int </font>additionResult = n1 + n2 + n3;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"The result is "</font> + additionResult);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
                
            ]]></code>
            <text>
                <![CDATA[
                Le a kalappal, ha a kivétel kezelést is megpróbáltad. Itt láthatsz egy helyes
                osztó metódust, ami kivétel kezelést is használ:
                ]]>
            </text>
            <code><![CDATA[
                
                <font color="gray">/*
<br/>Subtracts the second parameter from the first one and returns
<br/>the result. If the second parameter is 0, it returns 0.
<br/> */</font>
<br/><font color="#E65100">static</font><font color="#DF7401"> int </font><font color="#ADD8E6">subtract</font>(<font color="#DF7401">int </font>n1,<font color="#DF7401"> int </font>n2) {
<br/><font color="#DF7401">	&nbsp;&nbsp;&nbsp;&nbsp;int </font>divRes = <font color="#F0E130">0</font>;
<br/><font color="#E65100">	&nbsp;&nbsp;&nbsp;&nbsp;try </font>{
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;divRes = n1 / n2;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}<font color="#E65100"> catch </font>(<font color="#999900">ArithmeticException</font> e) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"An exception occurred!"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/><font color="#E65100">	&nbsp;&nbsp;&nbsp;&nbsp;return </font>divRes;
<br/>}
                
            ]]></code>
        </solution>
</resources>
