<?xml version="1.0" encoding="utf-8" standalone="no"?>
<resources>
    <taskdata>
        <id>151</id>
        <name>Online bolt</name>
    </taskdata>
    <text>
        <![CDATA[
        A feladatod egy online vásárlási rendszer (részének) létrehozása. A modell fő entitásai
        a következők legyenek:
        ]]>
    </text>
    <list>
        <![CDATA[
        <ul>
        <li>Customer (vevő): <b>névvel, életkorral és címmel</b> rendelkezik, valamint vásárlási előzményekkel.</li>
        <li>ReturningCustomer (visszatérő vevő): Egy speciális vásárlótípus, akinek kedvezményt adnak a termékekre.</li>
        <li>Address (cím): Tartalmazza a <b>postai irányítószámot, a várost, az utcát és a házszámot</b>.</li>
        <li>Product (termék): <b>névvel, árral, típussal és egyedi azonosítóval</b> rendelkezik. Győződj meg róla, hogy az azonosító minden termékobjektumnál egyedi.</li>
        <li>ProductType (termékek típusai): Konstansok, amelyek az áruházban található lehetséges terméktípusokat képviselik.</li>
        <li>Order (rendelés): <b>termékek</b> és azok <b>mennyiségeinek</b> párjai. Ez egy vásárlást reprezentál a boltban.</li>
        </ul>
        ]]>
    </list>
    <boxed title="Egységbe zárás">
        <![CDATA[
        Rejts el minden információt <i>privát tagok</i>, getterek és setterek mögé! Tiltsd le a nem módosítható 
		információk megváltoztatását (<i>final</i>). Ilyen lehet például az ügyfél neve.
        ]]>
    </boxed>
    <text>
        <![CDATA[
        Minden ilyen entitáshoz létre kell hoznod egy-egy osztályt, de nyugodtan hozhatsz létre többet is. 
		Az osztályoknak össze kell kapcsolódniuk, egymást tartalmazzák (például egy ügyfélnek van egy 
		címe), vagy öröklődnek egymásból (ügyfél és visszatérő ügyfél).
        ]]>
    </text>
    <title text="Viselkedés metódusokkal"/>
    <text>
        <![CDATA[
        Implementálj viselkedést minden osztály számára megfelelő metódusokkal. Minden osztálynak 
		rendelkeznie kell legalább néhány olyan metódussal, amelyek valami értelmes dolgot csinálnak. 
		Íme néhány példa:
        ]]>
    </text>
    <list>
        <![CDATA[
        <ul>
        <li>Egy metódus, amely kiszámítja egy ügyfél megrendeléseinek teljes árát.</li>
        <li>Egy metódus, amely felsorolja egy adott termék típushoz tartozó összes terméket.</li>
        </ul>
        ]]>
    </list>
    <boxed title="Kivétel kezelés">
        <![CDATA[
        Ne engedélyezd az érvénytelen objektumok létrehozását! Győződj meg például arról, hogy egy adott 
		életkor érvényes. Kivételek dobódjanak, ha valami nem stimmel (használd a <i>JDK</i> 
		megfelelő kivételét, például <i>IllegalArgumentException</i>).
        ]]>
    </boxed>
    <advanced title="Saját kivétel">
        <![CDATA[
        Extra feladatként hozz létre olyan saját kivételeket, amelyek jobban leírják a projekt problémáit. 
		Például, amikor a konstruktorban egy termék érvénytelen nevét kapja, dobj egy 
		<i>InvalidProductException</i>-t nevű saját kivételt.
        ]]>
    </advanced>
    <advanced title="Párok">
        <![CDATA[
        A megrendelésnek termék-mennyiség párokat kell tartalmaznia (mely termékek szerepelnek a 
		megrendelésben, és különböző termékenként hány darab). Ezt 2 listával is meg lehet valósítani, 
		de az elegánsabb megoldás egy <b>szótár</b> (<i>map</i>) használata (ezekről a következő kurzus során lesz szó).
        <p>
        A <i>JDK</i> tartalmaz szótár implementációkat, amelyeket használhatsz, itt van egy 
		bemutató a <a href="https://www.tutorialspoint.com/java/java_hashmap_class.htm">HashMap</a>-hez.
		<p>
		Egy másik szintén jó módszer ha saját osztályt készítesz a pároknak, majd ezeket rakod 
		egy listába.
        ]]>
    </advanced>
	<text>
		 <![CDATA[
		 A termékek típusait leíró konstansok esetén a legjobb módszer egy <i>enum</i> használata. 
		 ]]>
	</text>
    <title text="Javadoc"/>
    <text>
        <![CDATA[
        A <a href="https://www.tutorialspoint.com/java/java_documentation.htm">javadoc</a> az ajánlott módszer a 
		metódusok és osztályok dokumentálására! Próbáld ki ebben a projektben!
        Vagy ne tedd, de írj legalább néhány kommentet.
        ]]>
    </text>
    <title text="Teszt"/>
    <text>
        <![CDATA[
        Legyen az egyik osztályban <i>main</i> metódus. Teszteld a projektet néhány objektum 
		létrehozásával a <i>main</i>-ben.
        ]]>
    </text>

    <solution>
        <text>
            <![CDATA[
            Egy lehetséges megoldás egyéni kivétellel és javadoc kommentekkel.
            ]]>
        </text>
        <text>
            <![CDATA[
            A vásárló (<i>Customer</i> osztály:
            ]]>
        </text>
        <code><![CDATA[
            
<font color="#E65100">package</font> taskshop;
<br/>
<br/><font color="#E65100">import</font> java.<font color="#ADD8E6">util</font>.<font color="#999900">ArrayList</font>;
<br/><font color="#E65100">import</font> java.<font color="#ADD8E6">util</font>.<font color="#999900">List</font>;
<br/>
<br/><font color="gray">/**
<br/> * Az online bolt egy vásárlóját reprezentálja.
<br/> * @see ReturningCustomer
<br/> */</font>
<br/><font color="#E65100">public class</font> <font color="#999900">Customer</font> {
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** A vásárló neve. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">protected final</font> <font color="#999900">String</font> name;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** A vásárló kora. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">protected</font> <font color="#DF7401">int</font> age;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * A vásárló címe.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @see Address
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">protected</font> <font color="#999900">Address</font> address;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** A rendelések listája. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">protected final</font> <font color="#999900">List</font>&lt;<font color="#999900">Order></font> orderHistory;
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Egy olyan vásárlót hoz létre, akinek nincsen vásárlási előzménye.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @param name {@link #name}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @param age {@link #age}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @param address {@link #address}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @throws InvalidAgeException Ha a kor nem pozitív.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">Customer</font>(<font color="#999900">String</font> name, <font color="#DF7401">int</font> age, <font color="#999900">Address</font> address) <font color="#E65100">throws</font> <font color="#999900">InvalidAgeException</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">name</font> = name;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(age &lt;= <font color="#F0E130">0</font>) <font color="#E65100">throw</font> new <font color="#999900">InvalidAgeException</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">age</font> = age;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">address</font> = address;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;orderHistory = <font color="#E65100">new</font> <font color="#999900">ArrayList</font>&lt;>(); <font color="gray">//lista inicializálása
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Egy új vásárlást helyes a vásárló előzményeibe.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @param order A vásárlás.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">void</font> <font color="#ADD8E6">addOrder</font>(<font color="#999900">Order</font> order) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;orderHistory.<font color="#ADD8E6">add</font>(order);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Kiszámolja a vásárló eddigi összköltését a {@link #orderHistory} segítségével.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @return A teljes költség.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">double</font> <font color="#ADD8E6">totalSpending</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">double</font> sum = <font color="#F0E130">0</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">for</font>(<font color="#999900">Order</font> order: orderHistory) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;sum += order.<font color="#ADD8E6">totalPrice</font>(); <font color="gray">//az Order osztálynak van erre metódusa
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> sum;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">// -------------------- Getterek és setterek -----------------------
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">int</font> <font color="#ADD8E6">getAge</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> age;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">void</font> <font color="#ADD8E6">setAge</font>(<font color="#DF7401">int</font> age) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">age</font> = age;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">Address</font> <font color="#ADD8E6">getAddress</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> address;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">void</font> <font color="#ADD8E6">setAddress</font>(<font color="#999900">Address</font> address) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">address</font> = address;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">String</font> <font color="#ADD8E6">getName</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> name;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
<br/>
            
        ]]>
		</code>
		<text>
			<![CDATA[
			A viszatérő vásárló (<i>ReturningCustomer</i>), ami a vásárlóból származik:
			]]>
		</text>
        <code>
			<![CDATA[
            
<font color="#E65100">package</font> taskshop;
<br/>
<br/><font color="gray">/**
<br/> * Egy visszatérő vásárló osztálya. Az ilyen vásárlók kedvezményt kapnak.
<br/> * @see Customer
<br/> */</font>
<br/><font color="#E65100">public class</font> <font color="#999900">ReturningCustomer</font> <font color="#E65100">extends</font> <font color="#999900">Customer</font> {
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; *  Ez a 0 és 1 közti konstans adja meg a kedvezményt, százalékban. A
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; *  vásárlások összege meg lesz szorozva vele.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private final</font> <font color="#DF7401">double</font> discount;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Visszatérő vásárló konstruktor.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @param discount {@link #discount}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @throws InvalidAgeException Ha a kor nem pozitív.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @throws IllegalArgumentException Ha a kedvezmény konstans nem 0 és 1 között van.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">ReturningCustomer</font>(<font color="#999900">String</font> name, <font color="#DF7401">int</font> age, <font color="#999900">Address</font> address,
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">double</font> discount) <font color="#E65100">throws</font> <font color="#999900">InvalidAgeException</font>, <font color="#999900">IllegalArgumentException</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">super</font>(name, age, address);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(discount &lt; <font color="#F0E130">0</font> || discount > <font color="#F0E130">1</font>) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">throw new</font> <font color="#999900">IllegalArgumentException</font>(discount + <font color="#2E8B57">" is not a valid multiplier"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">discount</font> = discount;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Kiszámolja a vásárló által eddig költött összeget, a {@link #orderHistory} és
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * a kedvezmény figyelembe vételével.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @return Az eddig költött összeg.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="red">@Override</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">double</font> <font color="#ADD8E6">totalSpending</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return super</font>.<font color="#ADD8E6">totalSpending</font>() * discount;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">double</font> <font color="#ADD8E6">getDiscount</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> discount;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
<br/>
            
        ]]></code>
        <text>
            <![CDATA[
            A saját kivétel, amit használok hibás életkor esetén:
            ]]>
        </text>
        <code><![CDATA[
            
            <font color="#E65100">package</font> taskshop;
<br/>
<br/><font color="gray">/**
<br/> * Saját kivétel ami akkor dobódik, amikor nem megfelelő kor kerül megadásra.
<br/> * @see Customer
<br/> * @see ReturningCustomer
<br/> */</font>
<br/><font color="#E65100">public class</font> <font color="#999900">InvalidAgeException</font> <font color="#E65100">extends</font> <font color="#999900">RuntimeException</font> {
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">InvalidAgeException</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">super</font>(<font color="#2E8B57">"Age must be a positive number!"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>}
            
        ]]></code>
        <text>
            <![CDATA[
           A cím (<i>Address</i>) osztály:
            ]]>
        </text>
        <code><![CDATA[
            
            <font color="#E65100">package</font> taskshop;
<br/>
<br/><font color="gray">/**
<br/> * Vásárlók lakcímét reprezentáló osztály. Ahelyett, hogy csak egy String lenne,
<br/> * külön vettem a cím egyes részeit (irányítószám, város, utca, stb).
<br/> * @see Customer
<br/> */</font>
<br/><font color="#E65100">public class</font> <font color="#999900">Address</font> {
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** Irányítószám. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private</font> <font color="#DF7401">int</font> postalCode;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** Város. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private</font> <font color="#999900">String</font> city;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** Utca. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private</font> <font color="#999900">String</font> street;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** Házszám. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private</font> <font color="#DF7401">int</font> houseNumber;
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#ADD8E6">Address</font>(<font color="#DF7401">int</font> postalCode, <font color="#999900">String</font> city, <font color="#999900">String</font> street, <font color="#DF7401">int</font> houseNumber) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">postalCode</font> = postalCode;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">city</font> = city;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">street</font> = street;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">houseNumber</font> = houseNumber;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//hogy a cím szép String formában jelenjen meg, felülírom a toString metódust
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="red">@Override</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">String</font> <font color="#ADD8E6">toString</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> postalCode + <font color="#2E8B57">", "</font> + city + <font color="#2E8B57">"; "</font> + street + <font color="#2E8B57">" "</font> + houseNumber + <font color="#2E8B57">"."</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
<br/>
            
        ]]></code>
        <text>
            <![CDATA[
            A termék (<i>Product</i>) osztály:
            ]]>
        </text>
        <code><![CDATA[
            
            <font color="#E65100">package</font> taskshop;
<br/>
<br/><font color="gray">/**
<br/> * Egy, az online boltban vásárolható terméket reprezentál.
<br/> * @see ProductType
<br/> */</font>
<br/><font color="#E65100">public class</font> <font color="#999900">Product</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** A termék neve. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private</font> <font color="#999900">String</font> name;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** Egyedi azonosító. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private final</font> <font color="#DF7401">int</font> id;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** A termék ára, forintban megadva. */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private</font> <font color="#DF7401">int</font> price;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/** A termék típus (lásd a következő kódmintát). */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private final</font> <font color="#999900">ProductType</font> type;
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Létrehoz egy terméket.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @param name {@link #name}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @param type {@link #type}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @param price {@link #price}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @throws IllegalArgumentException Ha a kapott ár negatív.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">Product</font>(<font color="#999900">String</font> name, <font color="#999900">ProductType</font> type, <font color="#DF7401">int</font> price) <font color="#E65100">throws</font> <font color="#999900">IllegalArgumentException</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">name</font> = name;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">type</font> = type;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(price &lt;= <font color="#F0E130">0</font>) <font color="#E65100">throw new</font> <font color="#999900">IllegalArgumentException</font>(<font color="#2E8B57"><font color="#2E8B57">"Az árnak pozitívnak kell lennie!"</font></font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">price</font> = price;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">id</font> = <font color="#ADD8E6">generateUniqueId</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//statikus változó, amiből a termékek azonosítója készül.</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private static</font> <font color="#DF7401">int</font> currentProductId = <font color="#F0E130">1</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Statikus segéd metódus, ami megmondja a következő szabad azonosító számot a {@link #currentProductId} segítségével.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @return Az azonosító.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private static</font> <font color="#DF7401">int</font> <font color="#ADD8E6">generateUniqueId</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> currentProductId++; <font color="gray">//visszaadja, MAJD 1-el növeli
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">// ------------------ Getterek és setterek. ----------------------------------
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">String</font> <font color="#ADD8E6">getName</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> name;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">void</font> <font color="#ADD8E6">setName</font>(<font color="#999900">String</font> name) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">name</font> = name;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">int</font> <font color="#ADD8E6">getPrice</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> price;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">void</font> <font color="#ADD8E6">setPrice</font>(<font color="#DF7401">int</font> price) <font color="#E65100">throws</font> <font color="#999900">IllegalArgumentException</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(price &lt;= <font color="#F0E130">0</font>) <font color="#E65100">throw new</font> <font color="#999900">IllegalArgumentException</font>(<font color="#2E8B57"><font color="#2E8B57">"Az árnak pozitívnak kell lennie!"</font></font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">price</font> = price;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">int</font> <font color="#ADD8E6">getId</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> id;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">ProductType</font> <font color="#ADD8E6">getType</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> type;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
            
        ]]>
		</code>
		 <text>
            <![CDATA[
            A termékek típusait tartalmazó enum (<i>ProductType</i>):
            ]]>
        </text>
        <code>
		<![CDATA[
            
<font color="#E65100">package</font> taskshop;
<br/>
<br/><font color="gray">/**
<br/> * Enum a lehetséges termék típusoknak.
<br/> * @see Product
<br/> */</font>
<br/><font color="#E65100">public enum</font> <font color="#999900">ProductType</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;COMPUTERS,
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;TOOLS,
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;CLOTHES,
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;DECORATIONS,
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;FOOD_AND_DRINK
<br/>
<br/>}
<br/>
            
        ]]></code>
        <text>
            <![CDATA[
            A vásárlások osztálya (<i>Order</i>, amelyet egy <b>HashMap</b> (szótár) segítségével valósítottam meg.
			Ne aggódj, ha ezt nem egészen érted. A kollekciók következő kurzusban lesznek részletesen ismertetve. A lényeg
			annyi, hogy egy vásárlás során többféle terméket vásárolhatunk, és egy fajta termékből is lehet többet. Például,
			egy vásárlás lehet ha két nadrágot, és három pólót veszünk. A szótár az ilyen termék-darabszám párokat tárolja.
            ]]>
        </text>
        <code><![CDATA[
            
            <font color="#E65100">package</font> taskshop;
<br/>
<br/><font color="#E65100">import</font> java.<font color="#ADD8E6">util</font>.<font color="#999900">HashMap</font>;
<br/><font color="#E65100">import</font> java.<font color="#ADD8E6">util</font>.<font color="#999900">Map</font>.<font color="#999900">Entry</font>;
<br/>
<br/><font color="gray">/**
<br/> * Egy vásárlást reprezentál. A vásárlás többféle terméket tartalmazhat, többféle mennyiségben.
<br/> */</font>
<br/><font color="#E65100">public class</font> <font color="#999900">Order</font> {
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Ez a szótár tárolja, hogy miből és mennyit vettek.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private</font> <font color="#999900">HashMap</font>&lt;<font color="#999900">Product</font>, <font color="#999900">Integer</font>> products;
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Létrehoz egy vásárlást.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @param products A termék-mennyiség párok (egy szótárban).
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @throws IllegalArgumentException Ha üres a szótár, vagy valamiből negatív mennyiség van benne.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">Order</font>(<font color="#999900">HashMap</font>&lt;<font color="#999900">Product</font>, <font color="#999900">Integer</font>> products) <font color="#E65100">throws</font> <font color="#999900">IllegalArgumentException</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(products.<font color="#ADD8E6">isEmpty</font>()) <font color="#E65100">throw new</font> <font color="#999900">IllegalArgumentException</font>(<font color="#2E8B57">"Üres, nincsenek termékek!"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">for</font>(<font color="#DF7401">int</font> amount: products.<font color="#ADD8E6">values</font>()) { <font color="gray">//végigmegy a termékeken és megnézi a mennyiséget
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(amount &lt;= <font color="#F0E130">0</font>) <font color="#E65100">throw new</font> <font color="#999900">IllegalArgumentException</font>(<font color="#2E8B57">"A mennyiségnek pozitívnak kell lennie!"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">products</font> = products;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * Kiszámolja a vásárlás teljes összegét.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; * @return Az összeg.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">double</font> <font color="#ADD8E6">totalPrice</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">double</font> sum = <font color="#F0E130">0</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">for</font>(<font color="#999900">Entry</font>&lt;<font color="#999900">Product</font>, <font color="#999900">Integer</font>> pair: products.<font color="#ADD8E6">entrySet</font>()) { <font color="gray">//végigmegy a párokon
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;sum += pair.<font color="#ADD8E6">getKey</font>().<font color="#ADD8E6">getPrice</font>() * pair.<font color="#ADD8E6">getValue</font>(); <font color="gray">//a pair holds price*amount value
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> sum;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
<br/>
            
        ]]></code>
        <text>
            <![CDATA[
            Már csak néhány teszt futtatása van hátra a <i>main</i> metódusban:
            ]]>
        </text>
        <code><![CDATA[
            
            <font color="#E65100">public static</font> <font color="#DF7401">void</font> <font color="#ADD8E6">main</font>(<font color="#999900">String</font>[] args) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//termékek létrehozása</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">Product</font> tv = <font color="#E65100">new</font> <font color="#999900">Product</font>(<font color="#2E8B57">"Televízió"</font>, <font color="#999900">ProductType</font>.TECH, <font color="#F0E130">50000</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">Product</font> tShirt = <font color="#E65100">new</font> <font color="#999900">Product</font>(<font color="#2E8B57">"Póló"</font>, <font color="#999900">ProductType</font>.CLOTHES, <font color="#F0E130">3000</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//egy vásárló, kitalált címmel
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">Address</font> addressOfJani = <font color="#E65100">new</font> <font color="#999900">Address</font>(<font color="#F0E130">1133</font>, <font color="#2E8B57">"Budapest"</font>, <font color="#2E8B57">"Kossuth"</font>, <font color="#F0E130">23</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">Customer</font> jani = <font color="#E65100">new</font> <font color="#999900">Customer</font>(<font color="#2E8B57">"János"</font>, <font color="#F0E130">30</font>, addressOfJani);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"János címe: "</font> + jani.<font color="#ADD8E6">getAddress</font>());
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//egy rendelés létrehozása
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">HashMap</font>&lt;<font color="#999900">Product</font>, <font color="#999900">Integer</font>> pairs = <font color="#E65100">new</font> <font color="#999900">HashMap</font>&lt;>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;pairs.<font color="#ADD8E6">put</font>(tv, <font color="#F0E130">1</font>); <font color="gray">//1 tv
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;pairs.<font color="#ADD8E6">put</font>(tShirt, <font color="#F0E130">3</font>); <font color="gray">//3 póló
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">Order</font> orderOfJani = <font color="#E65100">new</font> <font color="#999900">Order</font>(pairs);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//ezt a vásárlást hozzáadjuk az előzményeihez
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;jani.<font color="#ADD8E6">addOrder</font>(orderOfJani);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57"><font color="#2E8B57">"János összköltése: "</font></font> + jani.<font color="#ADD8E6">totalSpending</font>() + " (normál vásárló)");
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//most ugyanez a vásárló, de visszatérőként, 20% kedvezménnyel
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">ReturningCustomer</font> janiReturning = <font color="#E65100">new</font> <font color="#999900">ReturningCustomer</font>(<font color="#2E8B57">"János"</font>, <font color="#F0E130">30</font>, addressOfJani, <font color="#F0E130">0.8</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;janiReturning.<font color="#ADD8E6">addOrder</font>(orderOfJani); <font color="gray">//ugyanez a rendelés
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57"><font color="#2E8B57">"Jani összköltése "</font></font> + janiReturning.<font color="#ADD8E6">totalSpending</font>() + " (visszatérő vásárló)");
<br/>}
            
        ]]></code>
        <text>
            <![CDATA[
            A futtatás során láthatjuk, hogy a teljes költés valóban kevesebb lesz, 
			ha visszatérő vásárlóról van szó.
            ]]>
        </text>
        <!-- for some reason it cant find any image here...
        <image name="task_shop"/>
        -->
    </solution>
</resources>
