<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!-- 'Naming rules and conventions', belongs to course 'The basics' --><resources>
    <chapterdata>
        <id>56</id>
        <name>Elnevezési szabályok és szokások</name>
    </chapterdata>
    <text>
        <![CDATA[
        Már tudjuk, hogy a változókat és a metódusokat el kell nevezni, amikor deklaráljuk őket. A
        neveket más szóval <b>azonosítóknak</b> is hívjuk. Arról
        azonban még nem volt szó, hogy milyen neveket használhatunk, vagy, hogy milyeneket
        ajánlott használni.
        ]]>
    </text>
    <title text="Elnevezési szabályok"/>
    <text>
        <![CDATA[
        A most következő szabályokat <b>kötelező</b> betartanunk, különben a program nem
        fog lefordulni.
        ]]>
    </text>
    <boxed title="Támogatott karakterek">
        <![CDATA[
        A Java unicode karakter kódolású, ezért több mint 137000 különféle karaktert használhatsz a
        forráskódban, a saját nyelveden programozhatsz.
        <br><br>
        <b>Azonban az, hogy lehetséges, nem jelenti azt, hogy ajánlott!</b>. A programozás nyelve
        az angol, ezért erősen ajánlott az angol ABC betűit használni.
        ]]>
    </boxed>
    <text>
        <![CDATA[
        A Java érzékeny a kis-, és nagybetűkre, azaz például a <i>Valami</i> és a <i>valami</i> szavakat
        különbözőnek veszi.
        <br><br>
        Amkor azonosítókat (neveket) adsz meg, ezekre figyelj:
        ]]>
    </text>
    <text>
        <![CDATA[
        <ul>
        <li> Csak betűvel, alulvonással, vagy a '<i>$</i>' karakterekkel kezdődhet.</li>
        <li> Az első utáni karakter lehet bármilyen betű, szám, vagy alulvonás.</li>
        <li> Tetszőleges hosszúságú lehet.</li>
        <li> Nem tartalmazhat speciális karaktert, például zárójelet, pontot vagy szóközt.</li>.
        </ul>
        ]]>
    </text>
    <text>
        <![CDATA[
        Lássunk néhány szabályos nevet. Megjegyezném, hogy ugyan ezek mind szabályosak, de ez még
        nem jelenti azt, hogy mindegyik jó névnek számít.
        ]]>
    </text>
    <code><![CDATA[
        
<font color="#DF7401">int </font>counter;
<font color="#DF7401">
<br/>int </font>input_counter;
<font color="#DF7401">
<br/>int </font>_counter;
<font color="#DF7401">
<br/>int </font>$input_counter;
<br/><font color="#999900">String</font> __Xx_SoMe_TeXt_Xx__;
<br/><font color="#999900">String</font> A124512999113;
<br/><font color="#999900">String</font> _________;
        
    ]]></code>
    <text>
        <![CDATA[
        Az első négy azonosító elég jó, az utolsó három viszont, annak ellenére, hogy szabályosak
        rendkívül csúnyák és nem írják le a változó tartalmát sem, ezért ilyen neveket sosem ajánlott
        használni.
        <br><br>
        Itt van néhány <b>szabálytalan</b> azonosító:
        ]]>
    </text>
    <code><![CDATA[

<font color="#DF7401"> int </font>0counter;
<font color="#DF7401">
<br/>int </font><font color="#ADD8E6">variable_</font>(important);
<br/><font color="#999900">String</font> <font color="#F0E130">1</font>.<font color="#ADD8E6">text</font>;

    ]]></code>
    <text>
        <![CDATA[
        Az első számmal kezdődik, ami nem engedélyezett. A másodikban tiltott karakter van, zárójel. A
        harmadik egyszerre több szabályt is megszeg, mert számmal kezdődik, és még egy pont is van benne. Az
        ilyen azonosítók fordítási hibát okoznak.
        ]]>
    </text>
    <text>
        <![CDATA[
        Van még egy elég nyilvánvaló szabály: nem használhatjuk azonosítóként a Java nyelv
        kulcsszavait. Ez nem jelent nagy gondot, mivel a kulcsszavak egyébként is elég rövid,
        semmitmondó nevek lennének. Például az <i>int</i> kulcsszót nem használhatjuk, ezért ez szabálytalan:
        ]]>
    </text>
    <code><![CDATA[
        
<font color="#DF7401">int</font> int = <font color="#F0E130">1</font>;
        
    ]]></code>
    <advanced title="List of keywords">
        <![CDATA[
        Itt nem sorom fel az összes azonosítót, azonban akit érdekel, az
        <a href="https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html">ezen a linken</a>
        megtekintheti őket, és a későbbi fejezetekben is sokkal találkozni fogunk.
        ]]>
    </advanced>
    <title text="Elnevezési szokások"/>
    <text>
        <![CDATA[
        Már tudjuk, hogy milyen neveket szabad adni, most megnézzük azt is, hogy milyet <b>ajánlott</b>.
        A most felsorolt "szabályok" nem kötelező érvényűek, de a használtuk jobb minőségű kódot eredményez.
        ]]>
    </text>
    <boxed title="Leíró nevek">
        <![CDATA[
        Az azonosítóknak le kell írniuk annak a tartalmát, amit azonosítanak. Például, hogyha egy változó,
        felhasználói inputot (<i>user input</i> tartalmaz, akkor a nevéből ez derüljön ki:
        <br><br>
        <i>userInput</i>, <i>user_input</i>, ...
        <br><br>
        Egy olyan változó, ami valakinek az életkorát (<i>age</i>) tartalmazza, akkor ennek
        az <i>age</i> egy jó név, nem pedig <i>x</i> vagy <i>y</i>.
        ]]>
    </boxed>
    <text>
        <![CDATA[
        Minden programnyelv esetén ajánlott a leíró nevek használata. Azonban Java esetén még vannak további
        ajánlások is. Ezek nem feltétlenül igazak más nyelvek esetén.
        ]]>
    </text>
    <text>
        <![CDATA[
        Amikor <b>metódusokat és változókat</b> nevezünk el, érdemes az úgynevezett "teve" elnevezést (<i>camel case</i>)
        használni.
        <br><br>
        Ez azt jelenti, hogyha a név több szóból áll, akkor ezek legyenek egybe írva úgy, hogy az első
        szó kisbetűs, majd minden további nagybetűvel kezdődik. Például:
        ]]>
    </text>
    <code><![CDATA[
        
 <font color="#999900">String</font> <font color="#ADD8E6">reverseText</font>(<font color="#999900">String</font> text) { ... }
        
    ]]></code>
    <interactive instruction="Javítsd ki a változó nevet úgy, hogy a camel case kompatibilis legyen!">
        <data><![CDATA[

<font color="#DF7401">int</font> ___ = <font color="#F0E130">0</font>;

        ]]></data>
        <answer place="0">matchCounter</answer>
        <default place="0">match_counter</default>
    </interactive>
    <text>
        <![CDATA[
        Erről ugyan még nem volt szó, de a Java-ban <b>osztályok</b> is vannak, ezeknek az ajánlott elnevezése
        hasonló a "teve" módszerhez, csak itt az első szót is nagy betűvel kell írni. Ezt egyébként
        <i>Pascal case</i> elnevezési stratégiának hívják. Például:
        ]]>
    </text>
    <code><![CDATA[
        
<font color="#E65100">public </font>class <font color="#999900">TextFormatter</font> { ... }
        
    ]]></code>
    <interactive instruction="Nevezd el a 'string builder' osztályt a fenti ajánlásnak megfelelően!">
        <data><![CDATA[
            
<font color="#E65100">public</font> <font color="#E65100">class</font> ___ {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//Class contents...	&nbsp;&nbsp;&nbsp;&nbsp;
</font>
<br/>}
            
        ]]></data>
        <answer place="0">StringBuilder</answer>
    </interactive>
    <text>
        <![CDATA[
        Talán kevésbé fontos, de a <b>csomagoknak</b> is van saját elnevezési ajánlásuk. Ezeket
        csupa kisbetűvel írjuk, és érdemes csak egy szóból állniuk.
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="#E65100">package</font> utils;
        
    ]]></code>
    <text>
        <![CDATA[
        Megjegyzem, hogy egy ilyen "csomag" név nem mond ellent ennek:
        <br><br>
        <i>package com.project.utils;</i>
        <br><br>
        Itt ugyanis több, egymásba ágyazott csomagról van szó, nem pedig egyről.
        ]]>
    </text>
    <advanced title="Konstansok elnevezése">
        <![CDATA[
        A konstansok olyan változók, amiknek csak egyszer lehet értéket adni. Még nem tanultuk, hogy
        hogyan kell ilyet készíteni, de ezeknek is van elnevezési ajánlásuk.
        <br><br>
        A nevük csakis nagybetűket tartalmazzon, több szó esetén ezek legyenek alulvonással elválasztva.
        Egy példa:
        <br><br>
        <i>final int MAXIMUM_SCORE = 20;
        ]]>
    </advanced>
</resources>
