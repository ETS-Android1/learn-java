<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!-- 'Variables', belongs to course 'The basics' --><resources>
    <chapterdata>
        <id>54</id>
        <name>Változók: deklarálás és értékadás</name>
    </chapterdata>
    <text>
        <![CDATA[
        A <b>változók</b> a program olyan elemei, amik információt tárolnak. A futás során
        az értéküket megváltoztathatjuk, innen kapták a változó nevet.
        ]]>
    </text>
    <boxed title="Változó létrehozása">
        <![CDATA[
        Mielőtt használhatnánk egy változót, először tudatnunk kell a programmal, hogy létrehozzuk. Ezt
        <b>deklarációnak</b> nevezzük.
        <br><br>
        Miután deklaráltuk a változót, a program ismerni fogja és <b>hivatkozhatunk rá</b>. Amikor először
        értéket adunk a deklarált változónak, azt <b>inicializálásnak</b> nevezzük.
        ]]>
    </boxed>
    <text>
        <![CDATA[
        A Java egy <b>statikusan típusozott nyelv</b>. Ez azt jelenti, hogy amikor deklaráljuk a
        változónkat, akkor meg kell adnunk a <b>típusát</b> is. Például, ha a változónk egész
        számot fog tartalmazni, akkor azt így deklarálhatjuk és inicilaizálhatjuk:
        ]]>
    </text>
    <code><![CDATA[
        
<font color="#DF7401">int</font> myVariable;
<br/>myVariable = <font color="#F0E130">5</font>;
        
    ]]></code>
    <text>
        <![CDATA[
        Az első utasítással deklaráljuk a változót. A típusát az <b>int</b> kulcsszóval adjuk meg (
        ez az angol 'integer' szó rövidítése). Ezután látható a <b>változó neve</b>, ebben az esetben
        <i>myVariable</i>.
        <p>
        A második utasításban inicializálunk, a változó most az <i>5</i> értéket kapja.
        ]]>
    </text>
    <text>
        <![CDATA[
        Ez a két utasítás gyakran jár egymás után, ezért a JAva biztosítja, hogy egyben végezzük el
        a deklarálást és az inicializálást:
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="#DF7401">int </font>myVariable = <font color="#F0E130">5</font>;
        
    ]]></code>
    <text>
        <![CDATA[
        Látható, hogy az értékadásra mindkét esetben a <b>=</b> szimbólumot használjuk. Kezdő programozók gyakran
        vétik azt a hibát, hogy az értékadó utasításokat, mint például <i>a = 3</i> összehasonlításnak
        veszik (<i>a</i> egyenlő hárommal). Ez azonban nem így van, az utasítást úgy értelmezni,
        hogy <b>legyen az a változó értéke 3</b>.
        ]]>
    </text>
    <advanced title="Automatikus inicializálás">
        <![CDATA[
        Egyes esetekben a Java inicializálás nélkül és beállít majd egy <b>alapértelmezett</b>
        értéket a változóinknak. Egyes típusok alapértelmezéseit egy későbbi fejezetben vesszük.
        ]]>
    </advanced>
    <text>
        <![CDATA[
        Egy utasításban akár több változót is deklarálhatunk és inicializálhatunk egyszerre:
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="#DF7401">int </font>x = <font color="#F0E130">5</font>, y = <font color="#F0E130">9</font>, z = <font color="#F0E130">-3</font>;
        
    ]]></code>
    <text>
        <![CDATA[
        Látható, hogy a típust elég egyszer leírni, majd vesszővel elválasztva felsorolhatjuk a
        deklarált változókat.
        ]]>
    </text>
    <interactive instruction="Deklarálj egy egész értékű változót 'counter' néven! Inicializáld 0-ra!">
        <data><![CDATA[

 <font color="#DF7401">int</font> ___ = ___;

        ]]></data>
        <answer place="0">counter</answer>
        <answer place="1">0</answer>
    </interactive>
    <title text="Hivatkozás"/>
    <text>
        <![CDATA[
        Miután deklaráltunk egy változót, a későbbiekben hivatkozhatunk rá, a neve segítségével. Az inicializáláshoz
        hasonlóan az = jellel adunk új értéket a változónak.
        <br><br>
        A következő példában egy szöveges értékű változót láthatsz. Ennek a típusa <b>String</b> (nagy S!).
        Ehhez használhatod az előző fejezetben készített projektet, vagy egy újat.
        ]]>
    </text>
    <code><![CDATA[
        
<font color="#E65100">public static</font> <font color="#DF7401"> void </font><font color="#ADD8E6">main</font>(<font color="#999900">String</font>[] args) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">String</font> text = <font color="#2E8B57">"Ez az alap érték"</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(text);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text = <font color="#2E8B57">"Ez a frissített érték"</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(text);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
        
    ]]></code>
    <text>
        <![CDATA[
        Ha futtatod ezt a programot, és megnézed a konzolra írt szövegeket, akkor láthatod, hogy
        ugyanannak a változónak az értékét kétszer is kiírtuk a konzolra, de mégis más szövegek jelennek meg.
        <br><br>
        Ennek oka, hogy az első kiíratás után a változó új értéket kapott.
        ]]>
    </text>
    <!-- For some reason this crashes
    <interactive instruction="Complete the declaration and the print statement!">
        <data>
        <![CDATA[
            ___ data = "1a3gjg18b42";
            <br/><font color="#999900">System</font>.out.println(___);
        ]]>
        </data>
        <answer place="0">String</answer>
        <asnwer place="1">data</asnwer>
    </interactive>
    -->
    <boxed title="Értékadási veszélyek">
        <![CDATA[
        Talán már meg is próbáltad, hogy mi történik, ha olyan értéket adsz a változónak, ami nem
        összeegyeztethető a típusával (például szöveges változónak egész számot). Semmi jó.
        Az ilyen kód nem fog lefordulni, és az <i>IDE</i> is figyelmeztet majd a hibára:
        ]]>
    </boxed>
    <image name="type_mismatch"/>
    <text>
        <![CDATA[
        Itt az látható, hogy az Eclipse figyelmeztet egy <b>típus hibára</b>, és még egy megoldást is ajánl.
        ]]>
    </text>
    <text>
        <![CDATA[
        Ahogy arra számítani lehet, szám típusú változókon matematikai műveleteket végezhetünk:
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="#DF7401">int </font>i = <font color="#F0E130">3</font>;
<font color="#DF7401">
<br/>int </font>j = <font color="#F0E130">5</font>;
<font color="#DF7401">
<br/>int </font>k = i + j;
<br/>j = i - <font color="#F0E130">1</font>;
<br/>k = <font color="#F0E130">2</font> * k;
        
    ]]></code>
    <text>
        <![CDATA[
        Próbáld meg kitalálni, hogy mi lesz az <i>i, j és k</i> változók értéke ennek a programnak a
        futtatása után.
        <br><br>
        <u>Megoldás:</u> Másold ezeket az utasításokat át a fejlesztőkörnyezetedbe, majd helyezd el utánuk
        azt az utasítást, ami kiíratja az értéküket:
        ]]>
    </text>
    <code><![CDATA[
        
<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"i: "</font>+i+", j: "+j+<font color="#2E8B57">", k: "</font>+k);
        
    ]]></code>
    <text>
        <![CDATA[
        Ebben az utasításban a <i>' + '</i> jelet <b>szövegekre</b> alkalmaztam! Az összeadás jel a kapott
        szövegeket <b>összefűzi</b> (egymás után írja).
        ]]>
    </text>
   <advanced title="Osztás">
       <![CDATA[
        A ' <i> / </i>' operátor segítségével osztást végezhetünk. Óvatosnak kell lenni azonban, hogy
        0-val ne osszunk, mert ilyenkor a program futása hibával leáll.
       ]]>
   </advanced>
    <interactive instruction="Egészítsd ki utasításokat, hogy a változó értéke 8 legyen! Több megoldás is van.">
        <data><![CDATA[
                 
               <font color="#DF7401">int</font> num = ___;
               <br/>num = num ___ <font color="#F0E130">5</font>;
          
        ]]></data>
        <answer group="add" place="0" required_places="1">3</answer>
        <answer group="subtract" place="0" required_places="1">13</answer>
        <answer group="div" place="0" required_places="1">40</answer>
        <answer group="add" place="1" required_places="0">+</answer>
        <answer group="subtract" place="1" required_places="0">-</answer>
        <answer group="div" place="1" required_places="0">/</answer>
    </interactive>
</resources>
