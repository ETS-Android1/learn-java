<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!-- Chapter about maps. --><resources>
    <chapterdata>
        <id>204</id>
        <name>Szótár</name>
    </chapterdata>
    <text>
        <![CDATA[
        A szótárak (<i>map</i>) hatékonyan képesek adat párokat tárolni. Ezeket a párokat <b>kulcs-érték</b> pároknak nevezzük.
        Egy megfelelő implementációval nagyon gyorsan megkaphatjuk egy adott kulcs értékét.
        ]]>
    </text>
    <text>
        <![CDATA[
        A a <i>map</i>-re gondolkodhatunk úgy, mint egy tömbre, de nem feltétlenül egész számokkal indexelve. Ehelyett
        a <b>kulcsok</b> az indexek, amelyek bármilyen típusúak lehetnek, mivel a <i>JDK</i>-s szótár implementációk 
		is generikusak.
        ]]>
    </text>
    <boxed title="Nincs sorrend">
        <![CDATA[
        A szótárak nem rendelkeznek a sorrend fogalmával. Míg például a listák vagy a sorok mindig pontos sorrendet 
		tartanak fenn, a szótárak csak azzal törődnek, hogy tartalmaznak-e egy elemet vagy sem. Léteznek más rendezetlen 
		kollekciók is, mint például a
        <a href="https://docs.oracle.com/javase/7/docs/api/java/util/Set.html">halmaz</a>.
        ]]>
    </boxed>
    <image name="map"/>
    <text>
        <![CDATA[
        A képen látható szótár kulcs típusa a <i>String</i>. Egy <i>String</i>-et megadva visszaadja a valós számot, 
		amely ahhoz a kulcshoz tartozik. (vagy <i>null</i>-t, ha az adott <i>String</i> nem létezik a szótárban). 
		Hasonlóan ahhoz, ahogyan egy tömbnek sem több eleme egy indexen, a szótárak sem fogják engedni a 
		<b>duplikált kulcsokat</b>.
        ]]>
    </text>
    <boxed title="Szórárak Java-ban">
        <![CDATA[
        A Java kollekciók keretrendszerében a szótárak ugyanazt a mintát követik, mint a korábban megismert 
		adatszerkezetek. Van egy legfelső interfész, <a href="https://docs.oracle.com/javase/7/docs/api/java/util/Map.html">java.util.Map</a>, 
		és ennek adott több implementációja: 
        <a href="https://docs.oracle.com/javase/7/docs/api/java/util/HashMap.html">java.util.HashMap</a> és 
		<a href="https://docs.oracle.com/javase/7/docs/api/java/util/TreeMap.html">java.util.TreeMap</a>.
        ]]>
    </boxed>
    <title text="Példa a szótár használatára"/>
    <text>
        <![CDATA[
        A szótárak akkor jönnek jól, ha hatékonyan szeretnénk adatokat párosítani. Hozzunk létre egy példát, 
		ahol a hét minden egyes napját egy logikai értékre képezzük le, amely jelzi, hogy az adott nap 
		hétvégére esik-e vagy sem.
        <p>
        Jó gyakorlat, ha <b>enumokat</b> használunk az olyan állandókhoz, mint például a hét napjai:
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="#E65100">enum</font> <font color="#999900">Day</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;MONDAY,
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;TUESDAY,
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;WEDNESDAY,
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;THURSDAY,
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;FRIDAY,
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;SATURDAY,
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;SUNDAY
<br/>}
        
    ]]></code>
    <text>
        <![CDATA[
        Ezután hozzunk létre egy szótárat az enum értékek és a <i>boolean</i>-ek között, és töltsük fel a párokkal:
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="gray">//create map</font>
<br/><font color="#999900">Map</font>&lt;<font color="#999900">Day</font>,<font color="#999900">Boolean</font>> weekendMap = <font color="#E65100">new</font> <font color="#999900">HashMap</font>&lt;>();
<br/>
<br/><font color="gray">//fill it with key-value pairs</font>
<br/><font color="#E65100">for</font>(<font color="#999900">Day</font> day: <font color="#999900">Day</font>.<font color="#ADD8E6">values</font>()) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(day == <font color="#999900">Day</font>.SATURDAY || day == <font color="#999900">Day</font>.SUNDAY) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;weekendMap.<font color="#ADD8E6">put</font>(day, <font color="#E65100">true</font>); <font color="gray">//on weekend</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;} <font color="#E65100">else</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;weekendMap.<font color="#ADD8E6">put</font>(day, <font color="#E65100">false</font>); <font color="gray">//not on weekend</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
        
    ]]></code>
    <text>
        <![CDATA[
        Mint látható, a <i>put</i> metódussal kulcs-érték párokat helyezhetünk el a szótárba. A benne lévő 
		párokra a kulcsok segítségével hivatkozhatunk:
        ]]>
    </text>
    <code><![CDATA[
        
           <font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"Monday is on weekend: "</font> + weekendMap.<font color="#ADD8E6">get</font>(<font color="#999900">Day</font>.MONDAY));
<br/><font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"Saturday is on weekend: "</font> + weekendMap.<font color="#ADD8E6">get</font>(<font color="#999900">Day</font>.SATURDAY));
        
    ]]></code>
    <title text="A szótár bejárása"/>
    <text>
        <![CDATA[
        Amikor szótárakkal dolgozunk, néha az összes párt végig akarjuk iterálni, ugyanúgy, mint például a 
		listák vagy tömbök esetében. Arra azonban figyelni kell, hogy a szórárnak nincs sorrendje. 
		Az előző szótárat fogom használni a lehetőségek bemutatására.
        <p>
        Ha <b>minden kulcsot</b> be akarunk járni, akkor ezt így megtehetjük:
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"The map has the following days as keys:"</font>);
<br/><font color="#E65100">for</font>(<font color="#999900">Day</font> key: weekendMap.<font color="#ADD8E6">keySet</font>()) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(key.<font color="#ADD8E6">toString</font>());
<br/>}
        
    ]]></code>
    <text>
        <![CDATA[
		<b>Minden értéket</b> hasonlóan tudunk iterálni, a különbség csak annyi, hogy a <i>keySet</b> metódus helyett 
		a <i>values</i> metódust kell használnunk. Ez a példa szótár esetében nem igazán érdekes, 
		mivel amúgy csak <i>true</i> és <i>false</i> értékeket tartalmaz.
		<p>
		Ehelyett nézzük meg, hogyan tudjuk <b>bejárni magukat a párokat</b>:
        ]]>
    </text>
    <code><![CDATA[
        
<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"The map has the following key-value pairs:"</font>);
<br/><font color="#E65100">for</font>(<font color="#999900">Map</font>.<font color="#999900">Entry</font>&lt;<font color="#999900">Day</font>, <font color="#999900">Boolean</font>> pair: weekendMap.<font color="#ADD8E6">entrySet</font>()) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(pair.<font color="#ADD8E6">getKey</font>() + " -> " + pair.<font color="#ADD8E6">getValue</font>());
<br/>}
        
    ]]></code>
    <text>
        <![CDATA[
        Van egy számunkra biztosított <i>Entry</i> osztály, amely képes a párokat tárolni.
        ]]>
    </text>
    <boxed title="További metódusok">
        <![CDATA[
        A szótárak szinte minden más, a korábbi gyűjteményekben már látott metódusokkal is rendelkeznek, mint például 
		az elemek eltávolítása (kulcs és érték szerint), elemek cseréje, törlése és a méret lekérdezése.
		<p>
		Itt nincsenek azonban olyan metódusok, amik pozíció alapján adnak vissza elemet ("első, "utolsó", stb), 
		mivel a szótárnak nincsen sorrendje.
        ]]>
    </boxed>
    <advanced title="Megvalósítások">
        <![CDATA[
        Egy szótár hatékony megvalósítása lényegesen nehezebb, mint egy lista vagy más listákon alapuló gyűjteményeké. 
		Ha érdekel, a <i>HashMap</i> és <i>TreeMap</i> leírásai jó kiindulópontok (fentebb linkelve). Egy nem hatékony, 
		de instruktív implementáció, ha egy párokat tartalmazó listát készítünk.
        ]]>
    </advanced>
    <interactive instruction="Ennek a programnak 5 nevet és életkort kell kérnie, majd ezeket egy szótárba helyeznie!">
        <data><![CDATA[

<font color="#999900">Map</font>&lt;___,___> userData = <font color="#E65100">new</font> <font color="#999900">HashMap</font>&lt;>();
<br/><font color="#999900">Scanner</font> scanner = <font color="#E65100">new</font> <font color="#999900">Scanner</font>(<font color="#999900">System</font>.<font color="#ADD8E6">in</font>);
<br/><font color="#E65100">for</font>(<font color="#DF7401">int</font> i=<font color="#F0E130">0</font>; i&lt;<font color="#F0E130">5</font>; i++) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"<font color="</font>#999900">Enter</font> " + (i+<font color="#F0E130">1</font>) + ". user name and age:");
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">String</font> name = scanner.<font color="#ADD8E6">nextLine</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">int</font> age = scanner.<font color="#ADD8E6">nextInt</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;userData.<font color="#ADD8E6">___</font>(name, age);
<br/>}

        ]]></data>
        <answer place="0">String</answer>
        <answer place="1">Integer</answer>
        <answer place="2">put</answer>
    </interactive>
</resources>
