<?xml version="1.0" encoding="utf-8" standalone="no"?>
<resources>
    <chapterdata>
        <id>351</id>
        <name>Java verziók</name>
    </chapterdata>
    <text>
        <![CDATA[
        A Java számos változáson ment keresztül a megjelenése óta. Nézd meg ezt a verzió táblázatot a
        <i>Wikipédiáról</i>:
        ]]>
    </text>
    <image name="java_versions"/>
    <text>
        <![CDATA[
        Itt van, hogy mi változhat egy új kiadásban:
        ]]>
    </text>
    <title text="Elavult osztályok kezelése"/>
    <text>
        <![CDATA[
        Egy metódus vagy osztály visszavonása (<b>deprecation</b>) azt jelenti, hogy egy későbbi verzióban majd eltávolításra
		fog kerülni kerül. A  legtöbb esetben, egy megfelelő helyettesítő megoldás kerül megadásra. A visszavonásra ítélt 
		kód továbbra is használható, azonban ajánlott a helyettesítő kódot használni helyette.
        ]]>
    </text>
    <boxed title="Jelölés">
        <![CDATA[
        A elavult, visszavont kódot a <b>@Deprecated</b> megjegyzéssel jelölik. A fordító egy
        figyelmeztetést fog adni, ha ilyen metódust vagy osztályt használsz.
        ]]>
    </boxed>
    <text>
        <![CDATA[
        Például a <a href="https://docs.oracle.com/javase/7/docs/api/java/util/Date.html">java.util.Date</a> osztály nagy része elavult, 
		mert egy jobb alternatíva a Java 7-ben megjelent 
		<a href="https://docs.oracle.com/javase/8/docs/api/java/time/package-summary.html">java.time</a> csomag.
        ]]>
    </text>
    <title text="Az alapkönyvtár bővítése"/>
    <text>
        <![CDATA[
        Minden verzióban új osztályok, metódusok, sőt néha egész csomagok kerülnek hozzá a szabványos
        könyvtárhoz (ez az, amit minden Java programban lehet használni, a <i>JDK</i> része). Ezek a bővítések lehetnek:
        ]]>
    </text>
    <list>
        <![CDATA[
        <ul>
        <li>A korábban meglévő kód jobb megvalósítása (ebben az esetben a korábbi kódot elavultnak tekintik).</li>
        <li>Kód, amely teljesen új funkcionalitást hoz be.</li>
        </ul>
        ]]>
    </list>
    <text>
        <![CDATA[
        Például a Java 7-ben a <a href="https://docs.oracle.com/javase/7/docs/api/java/nio/package-summary.html">java.nio</a> 
        csomagot adtak hozzá a standard könyvtárhoz (a név a <i>'New IO</i>' rövidítése), amivel az előzőeknél 
		könnyebben lehet fájlokat írni és olvasni.
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="#E65100">try</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">List</font>&lt;<font color="#999900">String</font>> lines = <font color="#999900">Files</font>.<font color="#ADD8E6">readAllLines</font>(<font color="#999900">Paths</font>.<font color="#ADD8E6">get</font>(<font color="#2E8B57">"myfile.txt"</font>));
<br/>} <font color="#E65100">catch</font>(<font color="#999900">IOException</font> e) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">err</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"<font color="</font>#999900">Nem sikerült beolvasni!"</font>);
<br/>}
        
    ]]></code>
    <text>
        <![CDATA[
        A <i>NIO</i> csomag előtt a programozóknak ennél val hosszabb kódot kellet írniuk ugyanennek a 
		feladatnak a megvalósításához.
        ]]>
    </text>
    <title text="A nyelv bővítése"/>
    <text>
        <![CDATA[
        Ezek a legjelentősebb változások amit egy új verzó hozhat. Új kulcsszavak és struktúrák kerülhetnek bevezetésre, 
		és a <i>Java</i> szintaxisa is megváltozhat, lehetővé téve a programozó számára, hogy produktívabb legyen.
        ]]>
    </text>
    <boxed title="Java 5: Generikus kód">
        <![CDATA[
        Az előző kurzusban ismertetett generikus kód például a <i>Java 5</i> által behozozz újdonság volt. Ez 
		jelentősen bővítette a nyelv képességeit és szintaxisát.
        ]]>
    </boxed>
    <title text="Miért a Java 8?"/>
    <text>
        <![CDATA[
        Ez a kurzus a <i>Java 8</i>-ról szól. Ha azonban újra megnézed a verzió táblázatot, akkor láthatod, hogy
        ez egyáltalán nem a legújabb kiadás. Akkor mitől olyan jelentős, hogy megérdemel egy saját kurzust?
        ]]>
    </text>
    <boxed title="Széleskörben használt">
        <![CDATA[
        A <i>Java 8</i> lett a legelterjedtebb verzió, az újabb kiadások ellenére. Ez részben azért van így, mert
        sok újdonságot kínált, részben pedig azért, mert az újabb verziók annyira nem, így sok programozó és vállalat 
		egyszerűen nem vette figyelembe, vagy nem tartotta érdemesnek a frissítést.
        ]]>
    </boxed>
    <text>
        <![CDATA[
        A következő fejezetekben a Java 8 legfontosabb változásait vesszük szemügyre, részletes magyarázatokkal 
        és példákkal.
        ]]>
    </text>
</resources>
