<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!-- Chapter about collection utilities. --><resources>
    <chapterdata>
        <id>205</id>
        <name>További információk adatstruktúrákról</name>
    </chapterdata>
    <text>
        <![CDATA[
        Mielőtt folytatnánk, fontos megjegyezni, hogy az előző fejezetek nem fedték le az összes adatszerkezetet.
        Jóval több van a <i>JDK</i>-ban. A teljes készletet lásd a 
		<a href="https://docs.oracle.com/javase/8/docs/technotes/guides/collections/overview.html">kollekciós keretrendszer dokumentációja</a>.
        ]]>
    </text>
    <title text="A Collections osztály"/>
    <text>
        <![CDATA[
        Ha kollekciókkal dolgozunk, hasznos, ha ismerjük a 
		<a href="https://docs.oracle.com/javase/7/docs/api/java/util/Collections.html">java.util.Collections</a> segédosztályt. 
        Most megnézünk ebből néhány metódust.
        ]]>
    </text>
    <advanced title="Csak olvasható kollekciók">
        <![CDATA[
        Sok, a következő metódusokkal létrehozott kollekció <b>csak olvasható</b> (<i>read only</i>).
        Az ilyen kollekciók nem engedik, hogy új elemeket adjunk hozzá, töröljünk, vagy pozíciót módosítsunk. 
		Gondolhatunk rájuk úgy is, mint egyfajta konstansokra.
        ]]>
    </advanced>
    <text>
        <![CDATA[
        Többféle metódus létezik a listák gyors létrehozására. Ezek hasonlóak a tömb inicializálóhoz.
        ]]>
    </text>
    <code><![CDATA[
        
<font color="gray">//create a list using the asList utility method</font>
<br/><font color="#999900">List</font>&lt;<font color="#999900">Integer</font>> numbers = <font color="#999900">Arrays</font>.<font color="#ADD8E6">asList</font>(<font color="#F0E130">0</font>, <font color="#F0E130">1</font>, <font color="#F0E130">2</font>, <font color="#F0E130">3</font>);
<br/>
<br/><font color="gray">//create list of 10 character a-s, using nCopies.</font>
<br/><font color="#999900">List</font>&lt;<font color="#999900">Character</font>> chars = <font color="#999900">Collections</font>.<font color="#ADD8E6">nCopies</font>(<font color="#F0E130">10</font>, <font color="#2E8B57">'a'</font>);
        
    ]]></code>
    <text>
        <![CDATA[
        Az így létrehozott listák csak olvashatóak. Ha módosítani próbáljuk őket, az <b>UnsupportedOperationException</b> 
		kivételt eredményez.
        ]]>
    </text>
    <text>
        <![CDATA[
        A <i>fill</i> metódussal megspórolhatjuk egy for ciklus írását, mivel ez fel tud tölteni egy kollekciót elemekkel.
        ]]>
    </text>
    <code><![CDATA[
        
<font color="gray">//replace all elements with 0-s</font>
<br/><font color="#999900">Collections</font>.<font color="#ADD8E6">fill</font>(numbers, <font color="#F0E130">0</font>);
        
    ]]></code>
    <text>
        <![CDATA[
        A <i>frequency</i> metódus meg tudja számolni egy adott elem előfordulását a kollekcióban.
        ]]>
    </text>
    <code><![CDATA[
        
<font color="gray">//count 0-s in the list</font>
<br/><font color="#DF7401">int</font> count = <font color="#999900">Collections</font>.<font color="#ADD8E6">frequency</font>(numbers, <font color="#F0E130">0</font>);
<br/><font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"0-s in the list: "</font> + count);
        
    ]]></code>
    <text>
        <![CDATA[
        Ha az elemeket át szeretnéd rendezni, az is lehetséges. Ezek a metódusok csak listák esetében működnek, mivel
        más kollekciók nem feltétlenül rendelkeznek a sorrend fogalmával.
        ]]>
    </text>
    <code><![CDATA[
        
<font color="gray">//reverse the order of the elements</font>
<br/><font color="#999900">Collections</font>.<font color="#ADD8E6">reverse</font>(numbers);
<br/>
<br/><font color="gray">//rearrange the elements in a random order</font>
<br/><font color="#999900">Collections</font>.<font color="#ADD8E6">shuffle</font>(numbers);
        
    ]]></code>
    <text>
        <![CDATA[
		Hasonló a <i>sort</i> metódus, ami növekvő sorrendbe rendezi az elemeket.
        Szintén lehetséges a minimum és a maximum megkeresése:
        ]]>
    </text>
    <code><![CDATA[
        
<font color="#DF7401">int</font> max = <font color="#999900">Collections</font>.<font color="#ADD8E6">max</font>(numbers);
<br/><font color="#DF7401">int</font> min = <font color="#999900">Collections</font>.<font color="#ADD8E6">min</font>(numbers);
<br/>
<br/><font color="gray">//sort the elements in ascending order</font>
<br/><font color="#999900">Collections</font>.<font color="#ADD8E6">sort</font>(numbers);
        
    ]]></code>
    <text>
        <![CDATA[
        Ahhoz, hogy ezek a metódusok működjenek, az elemeknek <b>összehasonlíthatónak</b> kell lenni. A primitív 
		wrapperek és a <i>String</i> esetében ez az elvárásoknak megfelelően működik, de a
		óvatosnak kell lennünk a használatukkal, ha az elemek más osztályok.
        ]]>
    </text>
    <advanced title="Comparable">
        <![CDATA[
        Ha olyan osztályt akarsz létrehozni, amelyet az ehhez hasonló módszerek használhatnak, akkor implementálnod kell a
        <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html">Comparable</a> interfészt. Ennek egy 
		metódusa van, a <i>compareTo</i>, ami két objektum összehasonlítását végzi.
        ]]>
    </advanced>
    <text>
        <![CDATA[
        Lássunk egy példát a <i>Comparable</i> interfészre. Az ezt megvalósító osztályok <b>összehasonlíthatóak</b> 
		lesznek. Itt van egy <i>Person</i> osztály, amelyik megvalósítja:
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="#E65100">public class</font> <font color="#999900">Person</font> <font color="#E65100">implements</font> <font color="#999900">Comparable</font>&lt;<font color="#999900">Person</font>> {
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">String</font> name;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">private</font> <font color="#DF7401">int</font> age; <font color="gray">//this will be used to compare
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#999900">Person</font>(<font color="#999900">String</font> name, <font color="#DF7401">int</font> age) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">name</font> = name;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">this</font>.<font color="#ADD8E6">age</font> = age;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">/**
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;Itt van a fontos metódus. Ha EZ az objektum 'nagyobb', akkor 1-et ad vissza. Amikor a
<br/> 	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a MÁSIK objektum (a paraméter) nagyobb, -1-et ad vissza. Egyenlőség esetén 0-t ad vissza.
<br/> 	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Az összehasonlításnak mindig így kell működnie a compareTo implementációkban.
<br/>	&nbsp;&nbsp;&nbsp;&nbsp; */</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="red">@Override</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public</font> <font color="#DF7401">int</font> <font color="#ADD8E6">compareTo</font>(<font color="#999900">Person</font> other) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">if</font>(<font color="#E65100">this</font>.<font color="#ADD8E6">age</font> > other.<font color="#ADD8E6">age</font>) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> <font color="#F0E130">1</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;} <font color="#E65100">else</font> <font color="#ADD8E6">if</font>(other.<font color="#ADD8E6">age</font> > <font color="#E65100">this</font>.<font color="#ADD8E6">age</font>) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> <font color="#F0E130">-1</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;} <font color="#E65100">else</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> <font color="#F0E130">0</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
        
    ]]></code>
    <text>
        <![CDATA[
        A <i>Person</i> objektumok mostantól életkoruk szerint összehasonlíthatóak, és ennek az osztálynak 
		a használata a korábban bemutatott metódusokban már lehetséges:
        ]]>
    </text>
    <code><![CDATA[
        
<font color="#999900">List</font>&lt;<font color="#999900">Person</font>> people = <font color="#999900">Arrays</font>.<font color="#ADD8E6">asList</font>(
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">new</font> <font color="#999900">Person</font>(<font color="#2E8B57">"Joe"</font>, <font color="#F0E130">21</font>),
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">new</font> <font color="#999900">Person</font>(<font color="#2E8B57">"Jane"</font>, <font color="#F0E130">33</font>),
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">new</font> <font color="#999900">Person</font>(<font color="#2E8B57">"John"</font>, <font color="#F0E130">55</font>)
<br/>);
<br/>
<br/><font color="#999900">Person</font> oldest = <font color="#999900">Collections</font>.<font color="#ADD8E6">max</font>(people);
<br/><font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"The oldest person is "</font> + oldest.<font color="#ADD8E6">name</font>);
        
    ]]></code>
    <interactive instruction="Egészítsd ki a metódust úgy, hogy a lista minimumát és maximumát eltávolítja!">
        <data><![CDATA[

<font color="#E65100">public</font> <font color="#DF7401">void</font> <font color="#ADD8E6">removeMinMax</font>(<font color="#999900">List</font>&lt;<font color="#999900">Double</font>> numbers) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;numbers.<font color="#ADD8E6">remove</font>(___.<font color="#ADD8E6">max</font>(numbers));
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;numbers.<font color="#ADD8E6">remove</font>(<font color="#999900">Collections</font>.<font color="#ADD8E6">___</font>(numbers));
<br/>}

        ]]></data>
        <answer place="0">Collections</answer>
        <answer place="1">min</answer>
    </interactive>
</resources>
