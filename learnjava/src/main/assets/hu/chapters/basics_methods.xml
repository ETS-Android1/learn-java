<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!-- 'Methods', belongs to the course 'The basics' --><resources>
    <chapterdata>
        <id>55</id>
        <name>Metódusok</name>
    </chapterdata>
    <text>
        <![CDATA[
        A metódusok olyan részei a kódnak, melyeknek <b>paramétereik</b> és <b>visszatérési
        értékük</b> lehet. A paramétereken valamilyen műveleteket végeznek, majd visszadják
        az eredményt. Egy metódust már láttunk, ez volt a főmetódus (<i>main</i>, a belépési pont)
        ]]>
    </text>
    <boxed title="Metódus deklarálása">
        <![CDATA[
        Amikor deklarálunk egy metódust, meg kell adnunk a nevét. A változókhoz hasonlóen ezzel hivatkozhatunk
        majd rá. Azt is meg kell mondani, hogy milyen paramétereket vár, és mi a visszatérési típusa.
        <br><br>
        Minden paraméternek külön nevet és típust kell adnunk. Ezekkel a nevekkel hivatkozhatunk majd rájuk a
        metóduson belül, pont mintha egyszerű változók lennének. A következő kódmintában ez egy példán keresztül lesz
        bemutatva.
        ]]>
    </boxed>
    <text>
        <![CDATA[
        Az előző fejezetekben készített projektet bővítem a következő metódussal. A neve,
        paraméterei és a benne lévő utasítások alapján próbáld meg kitalálni, hogy mit
        csinál ez a metódus.
        ]]>
    </text>
    <code>
        <![CDATA[
<font color="#E65100">static</font> <font color="#DF7401">int</font> <font color="#ADD8E6">add</font>(<font color="#DF7401">int </font>n1,<font color="#DF7401"> int </font>n2) {
<br/><font color="#DF7401">	&nbsp;&nbsp;&nbsp;&nbsp;int </font>additionResult = n1 + n2;
<br/><font color="#E65100">	&nbsp;&nbsp;&nbsp;&nbsp;return </font>additionResult;
<br/>}
    ]]>
    </code>
    <text>
        <![CDATA[
        Az első <i>int</i> kulcsszó megmondja a metódus visszatérési értékét, ami ebben az
        esetben egész szám. Ezután a metódus név következik, ami most <i>add</i> lett.
        <br><br>
        A név után, a zárójelek közt láthatóak a metódus paraméterei. Most kettő van belőlük,
        mindkettő egész szám (<i>int</i>) típusú, a nevük <i>n1</i> és <i>n2</i>.
        ]]>
    </text>
    <advanced title="A static kulcsszó">
        <![CDATA[
        Ebben a metódus deklarációban még egy <i>static</i> szó is látható. Ennek a jelentősége
        egy későbbi fejezetben lesz elmagyarázva, most legyen elég annyi, hogy enélkül nem tudnánk majd
        kipróbálni ezt a metódust.
        ]]>
    </advanced>
    <text>
        <![CDATA[
        <u>Mit csinál?</u> Az elnevezés árulkodó. Ez a metódus két egész számot kap, melyeket
        összead, az eredményt pedig visszaadja.
        ]]>
    </text>
    <boxed title="A return kulcsszó">
        <![CDATA[
        A <i>return</i> kulcsszóval adunk vissza értéket a metóduson belülről. Utána oda kell írni azt
        a változót, aminek az értékét vissza szeretnénk adni. A példa metódusban ez a változó az <i>additionResult</i> lesz.
        <br><br>
        Figyelni kell, hogy az így visszaadott változó típusa meg kell hogy egyezzen a metódus deklaráció során
        megadott visszatérési típussal. A példában ez stimmel, mint a metódus visszatérési értéke, mind az
        <i>additionResult</i> változó típusa <i>int</i>.
        ]]>
    </boxed>
    <interactive instruction="Javítsd ki a metódus deklarációt úgy, hogy a visszatérési típus helyes legyen!">
        <data><![CDATA[

<font color="#E65100">static</font> ___ <font color="#ADD8E6">getZero</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> <font color="#F0E130">0</font>;
<br/>}

        ]]></data>
        <answer place="0">int</answer>
        <default place="0">String</default>
    </interactive>
    <text>
        <![CDATA[
        Az ebben az interaktív mintában lévő metódusnak nincsen paramétere! Ez teljesen szabályos,
        azonban a zárójeleket ilyen esetben is ki kell írni.
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="#E65100">static</font> <font color="#DF7401">void </font>greetMe (<font color="#999900">String</font> myName) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"Hello, "</font> + myName);
<br/>}
        
    ]]></code>
    <text>
        <![CDATA[
        Ez a metódus szöveges paramétert (<i>String</i>-et) vár. A kapott szöveg elé befűzi a '<i>Hello</i>'
        szót, majd az egészet kiírja a konzolra.
        <br><br>
        Megfigyelhető egy kulcsszó, amit eddig még nem láttunk, a <b>void</b>. Ahogyan nem kell hogy legyen
        paraméter, úgy a visszatérési érték is opcionális. Ha nem szeretnénk visszatérési értéket, akkor
        a visszatérési típus helyett <i>void</i>-ot kell írni.
        ]]>
    </text>
    <interactive instruction="Deklarálj egy metódust visszatérési érték nélkül, String paraméterrel!">
        <data><![CDATA[
            
<font color="#E65100">static</font> ___ <font color="#ADD8E6">stringConsumer</font>(___ text) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//do something with string here...
</font>
<br/>}

        ]]></data>
        <answer place="0">void</answer>
        <answer place="1">String</answer>
    </interactive>
    <boxed title="Visszatérés a void metódusokban">
        <![CDATA[
        A <i>return</i> kulcsszó kicsit máshogy működik abban az esetben, ha a metódus nem ad vissza értéket. Ilyenkor
        nem is szükséges a használata, ahogy azt a fenti interaktív mintában láthatod.
        <br><br>
        Ennek ellenére lehet használni, csak ilyenkor nem írhatunk mögé értéket, magában kell állnia. Ez az
        utasítás azt fogja eredményezni, hogy a metódus azonnal visszatér, érték nélkül.
        <br><br>
        <i>return;</i>
        ]]>
    </boxed>
    <text>
        <![CDATA[
        Végül lássunk egy újabb paraméter nélküli metódust.
        ]]>
    </text>
    <code><![CDATA[
        
<font color="#E65100">static </font><font color="#DF7401">int </font><font color="#ADD8E6">twoPlusTwo</font>() {
<br/><font color="#E65100">	&nbsp;&nbsp;&nbsp;&nbsp;return </font><font color="#F0E130">2</font> + <font color="#F0E130">2</font>;
<br/>}
        
    ]]></code>
    <text>
        <![CDATA[
        Ez a metódus egyszerűen visszaadja a <i>2 + 2</i> értékét. Egy ilyen művelethez semmilyen
        kívülről érkező paraméterre nincs szükség.
        <br><br>
        Megfigyelheted, hogy a paraméterek hiányát <b>nem</b> a <i>void</i> kulcsszóval jelöljük,
        hanem egyszerűen nem írunk semmit a zárójelek közé.
        ]]>
    </text>
    <advanced title="Ne felejtsd el a zárójeleket!">
        <![CDATA[
        Talán felmerült benned kérdés, hogy miért kell kiírni az üres zárójeleket, ha nem akarunk egyetlen
        paramétert sem. Vegyük ezt a kis példát:
        <br><br>
        <i>int myMethod() { ... }</i>
        <br><br>
        A paraméterek helyét jelző zárójelek nélkül ez nagyon hasonlít egy változó deklarációra, ami
        megzavarja a fordítóprogramot, ezért hibajelzést fog adni:
        <br><br>
        <i>int myMethod { ... }</i>
        ]]>
    </advanced>
    <text>
        <![CDATA[
        Nem szabad metódust deklarálni egy másik metóduson belül! A metódus deklarációt mindig az <b>osztályon
        belül</b>, de a <b>többi metóduson kívül</b> kell megtenni. Például ez a kódminta <b>hibás</b>:
        ]]>
    </text>
    <code><![CDATA[
        
<font color="#E65100">static</font> <font color="#DF7401">int</font> <font color="#ADD8E6">method1</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;     <font color="#E65100">static</font> <font color="#DF7401">void</font> <font color="#ADD8E6">method2</font>() {
<br/>   	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;       <font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"I'</font>m an invalid method!");
<br/>      	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
        
    ]]></code>
    <text>
        <![CDATA[
        Most <b>meghívjuk</b> az előző példákban látott metódusokat. A projektnek valahogy így kell
        kinéznie (a metódusok sorrendje nem számít):
        ]]>
    </text>
    <code><![CDATA[
        
           <font color="#E65100">public class</font> <font color="#999900">Main</font> {
<br/>
<br/>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">public static</font> <font color="#DF7401">void</font> <font color="#ADD8E6">main</font>(<font color="#999900">String</font>[] args) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">static </font><font color="#DF7401">int </font><font color="#ADD8E6">add</font>(<font color="#DF7401">int </font>n1,<font color="#DF7401"> int </font>n2) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#DF7401">	&nbsp;&nbsp;&nbsp;&nbsp;int </font>additionResult = n1 + n2;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return </font>additionResult;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">static </font><font color="#DF7401">void </font><font color="#ADD8E6">greetMe</font>(<font color="#999900">String</font> myName) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"Hello, "</font> + myName);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">static </font><font color="#DF7401">int </font><font color="#ADD8E6">twoPlusTwo</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">	&nbsp;&nbsp;&nbsp;&nbsp;return </font><font color="#F0E130">2</font> + <font color="#F0E130">2</font>;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;}
<br/>}
        
    ]]></code>
    <title text="Metódusok meghívása"/>
    <text>
        <![CDATA[
        A metódusok írásának az értelme az, hogy később használhassuk, <b>meghívhassuk</b> őket.
        <br><br>
        Ehhez meg kell adnunk a metódus nevét, és minden paramétert át kell adnunk, amit az adott
        metódus vár:
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="#E65100">public static</font><font color="#DF7401"> void </font><font color="#ADD8E6">main</font>(<font color="#999900">String</font>[] args) {
<br/><font color="#DF7401">	&nbsp;&nbsp;&nbsp;&nbsp;int </font>result = <font color="#ADD8E6">add</font>(<font color="#F0E130">7,8</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>("7+<font color="#F0E130">8</font> is " + result);
<br/>}
<br/>
        
    ]]></code>
    <text>
        <![CDATA[
       Módosítsd a <i>main</i> metódus tartalmát így, majd futtasd a programot.
        <br><br>
        <u>Ami történni fog:</u> Az <i>add</i> metódus meghívódik, az megadott két paraméterrel,
        amik most a 7 és 8. Ezután metódusban lévő utasítások fognak lefutni, ezekkel az értékekkel:
        <br><br>
        <i>n1 = 7, n2 = 8</i>
        <br><br>
        Végül a metódusban elérünk a <i>return</i> utasításhoz, és az emögött álló érték (
        jelenleg 15) visszakerül a metódus hívójához.
        ]]>
    </text>
    <interactive instruction="Hívd meg a greetMe metódust 'John' paraméterrel!">
        <data><![CDATA[
            
<font color="#E65100">public</font> <font color="#E65100">static</font> <font color="#DF7401">void</font> <font color="#ADD8E6">main</font>(<font color="#999900">String</font>[] args) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;___ (___);
<br/>}
            
        ]]></data>
        <answer place="0">greetMe</answer>
        <answer place="1">"John"</answer>
    </interactive>
    <boxed title="Metódus értékül adása?">
        <![CDATA[
       Az előző példában van egy sor, ami furcsának tűnhet:
        <br><br>
        <i>result = add(7,8);</i>
        <br><br>
        Úgy tűnik, mintha egy metódust próbálnánk értékül adni a változónak. Amikor a Java ilyen utasítást lát,
        akkor lefuttatja a metódust, és <b>a visszatérési értékét</b> fogja értékül adni a változónak.
        <br><br>
        Ahogy a standard változó értékadásnál, itt is figyelni kell a típusok egyezésére. A változó
        típusa és a metódus visszatérési típusa azonos kell, hogy legyen. Ez például nem jó, mert az <i>add</i>
        visszatérési típusa <i>int</i>, nem pedig <i>String</i>:
        <br><br>
        String text = add(3,-11);
        ]]>
    </boxed>
    <text>
        <![CDATA[
        Most meghívjuk a következő, <i>greetMe</i> nevű metódust. Tudjuk, hogy ez szöveget vár,
        azt módosítja, majd az eredményt a konzolra írja. Módosítsd így a <i>main</i> metódust, majd
        futtasd a programot!
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="#E65100">public static</font><font color="#DF7401"> void </font><font color="#ADD8E6">main</font>(<font color="#999900">String</font>[] args) {
<br/><font color="#DF7401">	&nbsp;&nbsp;&nbsp;&nbsp;int </font>result = <font color="#ADD8E6">add</font>(<font color="#F0E130">7,8</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>("7+<font color="#F0E130">8</font> is " + result);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ADD8E6">greetMe</font>(<font color="#2E8B57">"Tom"</font>);
<br/>}
        
    ]]></code>
    <text>
        <![CDATA[
        Én most a <i>"Tom"</i> szöveget adtam át, de bármilyen idézőjelek közti szöveg jó lenne.
        ]]>
    </text>
    <title text="Metódusok hívása metódusokban"/>
    <text>
        <![CDATA[
       Talán már megfigyelted, hogy az <i>add</i> és a <i>twoPlusTwo</i> metódusok hasonló műveletet
       végeznek. Fel lehetne-e használni az <i>add</i>-ot a <i>twoPlusTwo</i>-n belül? Igen, ha így
       hívjuk meg:
        <br><br>
        <i>add(2,2)</i>
        ]]>
    </text>
    <text>
        <![CDATA[
        Akár át is írhatjuk a <i>twoPlusTwo</i> deklarációját a következőképpen:
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="#E65100">static </font><font color="#DF7401">int </font><font color="#ADD8E6">twoPlusTwo</font>() {
<br/><font color="#E65100">	&nbsp;&nbsp;&nbsp;&nbsp;return </font><font color="#ADD8E6">add</font>(<font color="#F0E130">2,2</font>);
<br/>}
        
    ]]></code>
    <advanced title="Legyenek rövidek!">
        <![CDATA[
        Általánosságban elmondható, hogy hosszú metódusokat írni rossz szokás. Könnyűnek tűnhet azt
        mondani, hogy minden kódomat beleírom a főmetódusba, és ezzel több metódusra nem is lesz szükség,
        azonban ez nehezen átlátható és karbantartható kódhoz vezet.
        <br><br>
        Próbáld meg ezt elkerülni úgy, hogy a kódot rövid metódusokba szervezed!
        ]]>
    </advanced>
</resources>
