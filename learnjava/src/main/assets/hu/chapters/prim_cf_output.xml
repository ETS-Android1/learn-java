<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--Belongs to course 'Primitives, control flow and I/O' -->
<resources>
    <chapterdata>
        <id>106</id>
        <name>Output</name>
    </chapterdata>
    <text>
        <![CDATA[
        Az előző fejezetben megtanultuk, hogyan fogadjuk a felhasználótól a bemenetet. Ugyanilyen fontos
        hogy megjelenítsük a programunk eredményeit, kimenetként (output).
        ]]>
    </text>
    <title text="A System.out használata"/>
    <text>
        <![CDATA[
        Ez a konzolra történő kiírás szabványos módja. Már sokszor használtuk.
        ]]>
    </text>
    <boxed title="PrintStream">
        <![CDATA[
        A <i>System.in</i>-hez hasonlóan a <i>System.out</i> is egyfajta adatfolyam. Ez azonban nem egy <i>InputSteam</i>,
        hanem egy egy <b>PrintStream</b>. Ez az osztály a primitív típusokat és a karakterláncokat alakítja át
        bájtokká, mielőtt elküldi őket a kimenetére (a <i>System.out</i> esetében ez a konzol).
        ]]>
    </boxed>
    <text>
        <![CDATA[
        A <i>PrintStream</i> minden primitív típushoz rendelkezik <b>kiíró metódusokkal</b>, és még sok mással is. Továbbá van egy
        megfelelő <b>println metódus</b> minden egyes kiíró metódushoz. Ezek majdnem ugyanazt csinálják, de
        <b>sortörést</b> illesztenek be a paraméterük kinyomtatása után (a println a print line rövidítése).
        ]]>
    </text>
    <boxed title="Védő karakterek">
        <![CDATA[
        Néhány speciális karaktert használhatunk a karakterláncok manipulálásához. Ezeket védő karaktereknek, vagy escape karaktereknek 
		nevezzük. Az egyik az <b>új sor karakter</b>, amely a következő: <b>\n</b>. Ez egy sortörést illeszt be ott, ahol használjuk.
        <p>
        Egy másik a tabulátor karakter, <b>\t</b>, amely egy tabulálást hoz létre a karakterláncban.
        <p>
        A teljes listát a <a href="https://docs.oracle.com/javase/tutorial/java/data/characters.html">karakterdokumentáció</a> 
		"escape sequences" részében találod.
        ]]>
    </boxed>
    <text>
        <![CDATA[
        Így már érthető, hogy a <i>println</i> metódusok csak a megfelelő <i>print</i> metódust hívják meg, de hozzáadják 
		a <b>\n</b> karaktert a szöveg végére, ami sortörést fog okozni.
        <br><br>
        Lásd ezt a kódmintát és képet néhány példáért:
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="#E65100">public static</font> <font color="#DF7401">void</font> <font color="#ADD8E6">main</font>(<font color="#999900">String</font>[] args) {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//usage of the line break character
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"Line 1\nLine 2"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//this just prints a line break
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//usage of the tab character
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">System</font>.<font color="#ADD8E6">out</font>.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"Tab1\tTab2"</font>);
<br/>}
        
    ]]></code>
    <text>
        <![CDATA[
        A kód futtatásakor a szöveg valóban formázva jelenik meg a konzolon:
        ]]>
    </text>
    <image name="formatted_text"/>
    <advanced title="System.err">
        <![CDATA[
        A <i>System.err</i> egy másik <i>PrintStream</i>, amely a standard hibakimenetre van hangolva. Alapértelmezés szerint ez is
        megjelenik a konzolon, de piros szövegszínnel. Ezt te magad is kipróbálhatod.
        ]]>
    </advanced>
    <title text="Fájlok írása"/>
    <text>
        <![CDATA[
        A kimenet biztosításának másik módja a fájlokba való írás. A <b>PrintWriter</b> osztály nagyon hasznos, mivel mi
        nem csak a konzolra, hanem egy fájlba is nyomtathatunk vele!
        ]]>
    </text>
    <code><![CDATA[
        
<font color="#E65100">public static</font> <font color="#DF7401">void</font> <font color="#ADD8E6">main</font>(<font color="#999900">String</font>[] args) <font color="#E65100">throws</font> <font color="#999900">Exception</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//create the PrintWriter
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">PrintWriter</font> pw = <font color="#E65100">new</font> <font color="#999900">PrintWriter</font>(<font color="#2E8B57">"output.txt"</font>, <font color="#2E8B57">"UTF-8"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//print something to file
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;pw.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"This is a line"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;pw.<font color="#ADD8E6">print</font>(<font color="#2E8B57">"Here is another line"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;pw.<font color="#ADD8E6">close</font>();
<br/>}
        
    ]]></code>
    <text>
        <![CDATA[
        Ahogy a fájlokból való olvasásnál, a Java megköveteli, hogy implementáljunk némi kivételkezelést, de 
        még nem tudjuk, hogyan kell ezt megtenni, ezért ugyanazt a "hacker" megoldást használjuk (<i>throws Exception</i>), amit az 
		előző fejezetben.
        <p>
        A <i>PrintWriter</i> második paramétere megadja a <a href="https://en.wikipedia.org/wiki/Character_encoding">
        karakterkódolást</a>. Egy megbízható választás az <b>UTF-8</b>.
        ]]>
    </text>
    <boxed title="Létező és nem létező fájl">
        <![CDATA[
        Ha megadjuk egy olyan fájl nevét, amely <b>nem létezik</b> az fájlrendszerben, akkor a fájl létrejön, majd
        programunk bele fogja írni a megadott szöveget.
        <p>
        Ha a <i>PrintWriter</i>-nek megadott <b>fájl már létezik</b>, akkor annak minden tartalma törlődik, és csak ezután lesz
        beleírva a megadott szöveg.
        ]]>
    </boxed>
    <text>
        <![CDATA[
        Sok esetben nem akarjuk törölni a fájl tartalmát, amibe írunk, hanem inkább <b>új sorokat akarunk hozzáírni</b> (append).
        <p>
        A <i>PrintWriter</i>-t egy kicsit másképp kell létehoznunk ahhoz, hogy ezt a viselkedést elérjük:
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="#E65100">public static</font> <font color="#DF7401">void</font> <font color="#ADD8E6">main</font>(<font color="#999900">String</font>[] args) <font color="#E65100">throws</font> <font color="#999900">Exception</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">File</font> file = <font color="#E65100">new</font> <font color="#999900">File</font>(<font color="#2E8B57">"output.txt"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">FileOutputStream</font> fos = <font color="#E65100">new</font> <font color="#999900">FileOutputStream</font>(file, <font color="#E65100">true</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//this PrintWriter will append	&nbsp;&nbsp;&nbsp;&nbsp;
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">PrintWriter</font> pw = <font color="#E65100">new</font> <font color="#999900">PrintWriter</font>(fos);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//print something to file
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;pw.<font color="#ADD8E6">println</font>(<font color="#2E8B57">"Line printed!"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;pw.<font color="#ADD8E6">close</font>();
<br/>}
        
    ]]></code>
    <text>
        <![CDATA[
        A kulcs a <b>FileOutputSteam</b> második paramétere. Ha true-ra állítjuk, akkor engedélyezzük a hozzáírás módot.
        <p>
        Futtasd a kódot többször, és figyeld meg, hogy a <i>output.txt</i> tartalma egy sorral növekszik.
        minden futtatás után!
        ]]>
    </text>
    <interactive instruction="Egészítsük ki a programot úgy, hogy az 'results.txt' nevű fájlba írja a tömb értékeit!">
        <data><![CDATA[
            
<font color="#999900">String</font>[] lines = <font color="#ADD8E6">calculate</font>(); <font color="gray">//suppose this works
</font>
<br/><font color="#999900">File</font> file = <font color="#E65100">new</font> <font color="#999900">File</font>(___);
<br/><font color="#999900">FileOutputStream</font> stream = <font color="#E65100">new</font> <font color="#999900">FileOutputStream</font>(file);
<br/>___ writer = <font color="#E65100">new</font> <font color="#ADD8E6">___</font>(stream);
<br/><font color="#ADD8E6">___</font>(<font color="#999900">String</font> line: lines) { <font color="gray">//iterate lines
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;writer.<font color="#ADD8E6">println</font>(line);
<br/>}
<br/>writer.<font color="#ADD8E6">close</font>();
            
        ]]></data>
        <answer place="0">"results.txt"</answer>
        <answer place="1">PrintWriter</answer>
        <answer place="2">PrintWriter</answer>
        <answer place="3">for</answer>
    </interactive>
    <title text="A Files osztály használata"/>
    <text>
        <![CDATA[
        Hasonlóan ahhoz, ahogyan a fájlokat olvasásánál is, használhatjuk a modern <b>Files</b> segédosztályt is. Ez akkor hasznos, ha
        már eleve egy listába vagy tömbbe akarjuk rakni a sorokat:
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="#E65100">public static</font> <font color="#DF7401">void</font> <font color="#ADD8E6">main</font>(<font color="#999900">String</font>[] args) <font color="#E65100">throws</font> <font color="#999900">Exception</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//create the lines
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">ArrayList</font>&lt;<font color="#999900">String</font>> lines = <font color="#ADD8E6">createLines</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//create path object
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">Path</font> filePath = <font color="#999900">Paths</font>.<font color="#ADD8E6">get</font>(<font color="#2E8B57">"output.txt"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">Files</font>.<font color="#ADD8E6">write</font>(filePath, lines, <font color="#999900">StandardCharsets</font>.<font color="#999900">UTF_<font color="#F0E130">8</font></font>);
<br/>}
<br/>
<br/><font color="gray">/*
<br/>This method creates our lines,
<br/>placed in a list.
<br/>*/</font>
<br/><font color="#E65100">static</font> <font color="#999900">ArrayList</font>&lt;String> <font color="#ADD8E6">createLines</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//construct list
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">ArrayList</font>&lt;<font color="#999900">String</font>> l = <font color="#E65100">new</font> <font color="#999900">ArrayList</font>&lt;>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//add some lines
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;l.<font color="#ADD8E6">add</font>(<font color="#2E8B57">"line 1"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;l.<font color="#ADD8E6">add</font>(<font color="#2E8B57">"line 2"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;l.<font color="#ADD8E6">add</font>(<font color="#2E8B57">"line 3"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> l;
<br/>}
        
    ]]></code>
    <text>
        <![CDATA[
        Ez a módszer alapértelmezés szerint nem hozzáír, hanem törli a fájl tartalmát! Ahhoz, hogy a meglévő fájlokhoz hozzáírja 
		a sorokat, hozzá kell adnunk egy további paramétert a write metódushoz, például így:
        ]]>
    </text>
    <code><![CDATA[
        
        <font color="#E65100">public static</font> <font color="#DF7401">void</font> <font color="#ADD8E6">main</font>(<font color="#999900">String</font>[] args) <font color="#E65100">throws</font> <font color="#999900">Exception</font> {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//create the lines
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">ArrayList</font>&lt;<font color="#999900">String</font>> lines = <font color="#ADD8E6">createLines</font>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//create path object
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">Path</font> filePath = <font color="#999900">Paths</font>.<font color="#ADD8E6">get</font>(<font color="#2E8B57">"output.txt"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//this will now append
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">Files</font>.<font color="#ADD8E6">write</font>(filePath, lines, <font color="#999900">StandardCharsets</font>.<font color="#999900">UTF_<font color="#F0E130">8</font></font>,
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">StandardOpenOption</font>.<font color="#999900">APPEND</font>);
<br/>}
<br/>
<br/><font color="gray">/*
<br/>This method creates our lines,
<br/>placed in a list.
<br/>*/</font>
<br/><font color="#E65100">static</font> <font color="#999900">ArrayList</font>&lt;String> <font color="#ADD8E6">createLines</font>() {
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//construct list
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999900">ArrayList</font>&lt;String> l = <font color="#E65100">new</font> <font color="#999900">ArrayList</font>&lt;>();
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="gray">//add some lines
</font>
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;l.<font color="#ADD8E6">add</font>(<font color="#2E8B57">"line 1"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;l.<font color="#ADD8E6">add</font>(<font color="#2E8B57">"line 2"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;l.<font color="#ADD8E6">add</font>(<font color="#2E8B57">"line 3"</font>);
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;
<br/>	&nbsp;&nbsp;&nbsp;&nbsp;<font color="#E65100">return</font> l;
<br/>}
        
    ]]></code>
</resources>
